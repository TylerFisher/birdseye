{"version":"0.2.8","files":{"/Users/jdemorai/projects/dust-Linkedin/dustjs/test/jasmine-test/server/specRunner.js":{"stats":{"percentage":0.8611111111111112,"lines":[{"lineno":20},{"lineno":22},{"lineno":24},{"lineno":26},{"lineno":34}],"missing":5,"seen":31,"total":36,"coverage":{"20":{"partial":false,"source":"      return showColors = true;","missing":[{"startCol":6,"endCol":31}]},"22":{"partial":false,"source":"      return showColors = false;","missing":[{"startCol":6,"endCol":32}]},"24":{"partial":false,"source":"      return isVerbose = true;","missing":[{"startCol":6,"endCol":30}]},"26":{"partial":false,"source":"      return coffee = true;","missing":[{"startCol":6,"endCol":27}]},"34":{"partial":false,"source":"    return process.exit(1);","missing":[{"startCol":4,"endCol":27},{"startCol":11,"endCol":26}]}},"source":"var jasmine = require('jasmine-node'),\n    sys = require('util'),\n    path = require('path');\n\n/* this should be declared global in order to access them in the spec*/\ndust = require('../../../lib/dust'),\ndustExamples = require('../spec/examples');\n\nfor(key in jasmine) \n  global[key] = jasmine[key];\n\nisVerbose = true;\nshowColors = true;\ncoffee = false;\n\nprocess.argv.forEach(function(arg) {\n  var coffee, isVerbose, showColors;\n  switch (arg) {\n    case '--color':\n      return showColors = true;\n    case '--noColor':\n      return showColors = false;\n    case '--verbose':\n      return isVerbose = true;\n    case '--coffee':\n      return coffee = true;\n  }\n});\n\njasmine.executeSpecsInFolder(path.dirname(__dirname) + '/spec', (function(runner, log) {\n  if (runner.results().failedCount === 0) {\n    return process.exit(0);\n  } else {\n    return process.exit(1);\n  }\n}), isVerbose, showColors);","blocks":{"total":9,"seen":4,"missing":5,"percentage":0.4444444444444444}},"hash":"15253ac3a2978850277d4d6d9600c5ba"},"/Users/jdemorai/projects/dust-Linkedin/dustjs/lib/dust.js":{"stats":{"percentage":0.8622047244094488,"lines":[{"lineno":8},{"lineno":18},{"lineno":19},{"lineno":20},{"lineno":22},{"lineno":26},{"lineno":30},{"lineno":31},{"lineno":32},{"lineno":33},{"lineno":34},{"lineno":36},{"lineno":46},{"lineno":47},{"lineno":48},{"lineno":49},{"lineno":50},{"lineno":54},{"lineno":59},{"lineno":65},{"lineno":66},{"lineno":71},{"lineno":87},{"lineno":99},{"lineno":111},{"lineno":116},{"lineno":133},{"lineno":141},{"lineno":191},{"lineno":215},{"lineno":216},{"lineno":217},{"lineno":228},{"lineno":232},{"lineno":236},{"lineno":238},{"lineno":239},{"lineno":240},{"lineno":242},{"lineno":244},{"lineno":245},{"lineno":247},{"lineno":251},{"lineno":253},{"lineno":254},{"lineno":260},{"lineno":262},{"lineno":263},{"lineno":286},{"lineno":307},{"lineno":375},{"lineno":379},{"lineno":391},{"lineno":404},{"lineno":424},{"lineno":434},{"lineno":435},{"lineno":436},{"lineno":445},{"lineno":485},{"lineno":486},{"lineno":487},{"lineno":488},{"lineno":489},{"lineno":490},{"lineno":491},{"lineno":492},{"lineno":493},{"lineno":494},{"lineno":497}],"missing":70,"seen":438,"total":508,"coverage":{"8":{"partial":false,"source":"  if (!name) return;","missing":[{"startCol":13,"endCol":20}]},"18":{"partial":false,"source":"  var stream = new Stream();","missing":[{"startCol":2,"endCol":28}]},"19":{"partial":false,"source":"  dust.nextTick(function() {","missing":[{}]},"20":{"partial":false,"source":"    dust.load(name, stream.head, Context.wrap(context)).end();","missing":[{"startCol":4,"endCol":61},{"startCol":33,"endCol":54},{},{"startCol":13,"endCol":55}]},"21":{"partial":false,"source":"  });","missing":[{}]},"22":{"partial":false,"source":"  return stream;","missing":[{"startCol":2,"endCol":16}]},"26":{"partial":false,"source":"  return dust.compileFn(source)(context, callback);","missing":[{"startCol":2,"endCol":51},{"startCol":9,"endCol":50},{"startCol":23,"endCol":31}]},"30":{"partial":false,"source":"  var tmpl = dust.loadSource(dust.compile(source, name));","missing":[{"startCol":2,"endCol":57},{"startCol":13,"endCol":56},{"startCol":29,"endCol":55}]},"31":{"partial":false,"source":"  return function(context, callback) {","missing":[{}]},"32":{"partial":false,"source":"    var master = callback ? new Stub(callback) : new Stream();","missing":[{"startCol":4,"endCol":62},{"startCol":28,"endCol":46},{},{"startCol":49,"endCol":61}]},"33":{"partial":false,"source":"    dust.nextTick(function() {","missing":[{}]},"34":{"partial":false,"source":"      tmpl(master.head, Context.wrap(context)).end();","missing":[{"startCol":24,"endCol":45},{"startCol":10,"endCol":46},{"startCol":6,"endCol":52},{}]},"35":{"partial":false,"source":"    });","missing":[{}]},"36":{"partial":false,"source":"    return master;","missing":[{},{"startCol":4,"endCol":18}]},"37":{"partial":false,"source":"  }","missing":[{}]},"38":{"partial":false,"source":"};","missing":[{}]},"46":{"partial":false,"source":"      return chunk.map(function(chunk) {","missing":[{}]},"47":{"partial":false,"source":"        dust.onLoad(name, function(err, src) {","missing":[{}]},"48":{"partial":false,"source":"          if (err) return chunk.setError(err);","missing":[{},{"startCol":19,"endCol":46},{"startCol":26,"endCol":45}]},"49":{"partial":false,"source":"          if (!dust.cache[name]) dust.loadSource(dust.compile(src, name));","missing":[{"startCol":33,"endCol":73},{},{"startCol":49,"endCol":72}]},"50":{"partial":false,"source":"          dust.cache[name](chunk, context).end();","missing":[{},{"startCol":10,"endCol":48},{"startCol":26,"endCol":42}]},"51":{"partial":false,"source":"        });","missing":[{}]},"52":{"partial":false,"source":"      });","missing":[{}]},"54":{"partial":false,"source":"    return chunk.setError(new Error(\"Template Not Found: \" + name));","missing":[{"startCol":4,"endCol":68},{"startCol":11,"endCol":67},{"startCol":36,"endCol":65}]},"59":{"partial":false,"source":"  return eval(source);","missing":[{"startCol":2,"endCol":22},{"startCol":9,"endCol":21}]},"65":{"partial":false,"source":"  dust.isArray = function(arr) {","missing":[{}]},"66":{"partial":false,"source":"    return Object.prototype.toString.call(arr) == \"[object Array]\";","missing":[{"startCol":4,"endCol":67},{},{"startCol":11,"endCol":46}]},"67":{"partial":false,"source":"  };","missing":[{}]},"71":{"partial":false,"source":"  setTimeout(callback, 0);","missing":[{"startCol":2,"endCol":25}]},"87":{"partial":false,"source":"        string = dust.filters[name](string);","missing":[{"startCol":8,"endCol":44},{"startCol":17,"endCol":43}]},"99":{"partial":false,"source":"  j: function(value) { return dust.escapeJs(value); },","missing":[{"startCol":23,"endCol":51},{"startCol":30,"endCol":50}]},"111":{"partial":false,"source":"  return new Context(new Stack(), global);","missing":[{"startCol":2,"endCol":42}]},"116":{"partial":false,"source":"    return context;","missing":[{"startCol":4,"endCol":19}]},"133":{"partial":true,"source":"  return this.global ? this.global[key] : undefined;","missing":[{"startCol":23,"endCol":39}]},"141":{"partial":false,"source":"  if (!ctx.isObject) return undefined;","missing":[{"startCol":21,"endCol":38}]},"191":{"partial":false,"source":"  return this;","missing":[{"startCol":2,"endCol":14}]},"215":{"partial":false,"source":"      this.callback(chunk.error);","missing":[{"startCol":6,"endCol":32}]},"216":{"partial":false,"source":"      this.flush = function() {};","missing":[{"startCol":6,"endCol":33}]},"217":{"partial":false,"source":"      return;","missing":[{"startCol":6,"endCol":13}]},"228":{"partial":false,"source":"  this.head = new Chunk(this);","missing":[{"startCol":2,"endCol":30}]},"232":{"partial":false,"source":"  var chunk = this.head;","missing":[{"startCol":2,"endCol":24}]},"236":{"partial":false,"source":"      this.emit('data', chunk.data);","missing":[{"startCol":6,"endCol":35}]},"238":{"partial":false,"source":"      this.emit('error', chunk.error);","missing":[{"startCol":6,"endCol":37}]},"239":{"partial":false,"source":"      this.flush = function() {};","missing":[{"startCol":6,"endCol":33}]},"240":{"partial":false,"source":"      return;","missing":[{"startCol":6,"endCol":13}]},"242":{"partial":false,"source":"      return;","missing":[{"startCol":6,"endCol":13}]},"244":{"partial":false,"source":"    chunk = chunk.next;","missing":[{"startCol":4,"endCol":23}]},"245":{"partial":false,"source":"    this.head = chunk;","missing":[{"startCol":4,"endCol":22}]},"247":{"partial":false,"source":"  this.emit('end');","missing":[{"startCol":2,"endCol":18}]},"251":{"partial":false,"source":"  var events = this.events;","missing":[{"startCol":2,"endCol":27}]},"253":{"partial":false,"source":"  if (events && events[type]) {","missing":[{"startCol":6,"endCol":28}]},"254":{"partial":false,"source":"    events[type](data);","missing":[{"startCol":4,"endCol":22}]},"260":{"partial":false,"source":"    this.events = {};","missing":[{"startCol":4,"endCol":21}]},"262":{"partial":false,"source":"  this.events[type] = callback;","missing":[{"startCol":2,"endCol":31}]},"263":{"partial":false,"source":"  return this;","missing":[{"startCol":2,"endCol":14}]},"286":{"partial":false,"source":"    this.write(data);","missing":[{"startCol":4,"endCol":20}]},"307":{"partial":false,"source":"    this.taps = taps.push(tap);","missing":[{"startCol":4,"endCol":31},{"startCol":16,"endCol":30}]},"375":{"partial":false,"source":"    if (body) return body(this, context);","missing":[{"startCol":14,"endCol":41},{"startCol":21,"endCol":40}]},"379":{"partial":false,"source":"  return this;","missing":[{"startCol":2,"endCol":14}]},"391":{"partial":false,"source":"  return this;","missing":[{"startCol":2,"endCol":14}]},"404":{"partial":false,"source":"  return this;","missing":[{"startCol":2,"endCol":14}]},"424":{"partial":false,"source":"        chunk.setError(err);","missing":[{"startCol":8,"endCol":27}]},"434":{"partial":false,"source":"  this.error = err;","missing":[{"startCol":2,"endCol":19}]},"435":{"partial":false,"source":"  this.root.flush();","missing":[{"startCol":2,"endCol":19}]},"436":{"partial":false,"source":"  return this;","missing":[{"startCol":2,"endCol":14}]},"445":{"partial":false,"source":"  return new Tap(tap, this);","missing":[{"startCol":2,"endCol":28}]},"485":{"partial":false,"source":"  if (typeof s === \"string\") {","missing":[{"startCol":6,"endCol":27}]},"486":{"partial":false,"source":"    return s","missing":[{}]},"487":{"partial":false,"source":"      .replace(BS, '\\\\\\\\')","missing":[{},{"startCol":14,"endCol":26}]},"488":{"partial":false,"source":"      .replace(DQ, '\\\\\"')","missing":[{"startCol":14,"endCol":25},{}]},"489":{"partial":false,"source":"      .replace(SQ, \"\\\\'\")","missing":[{},{"startCol":14,"endCol":25}]},"490":{"partial":false,"source":"      .replace(CR, '\\\\r')","missing":[{"startCol":14,"endCol":25},{}]},"491":{"partial":false,"source":"      .replace(LS, '\\\\u2028')","missing":[{"startCol":14,"endCol":29},{}]},"492":{"partial":false,"source":"      .replace(PS, '\\\\u2029')","missing":[{},{"startCol":14,"endCol":29}]},"493":{"partial":false,"source":"      .replace(NL, '\\\\n')","missing":[{"startCol":14,"endCol":25},{}]},"494":{"partial":false,"source":"      .replace(LF, '\\\\f')","missing":[{"startCol":14,"endCol":25},{}]},"495":{"partial":false,"source":"      .replace(TB, \"\\\\t\");","missing":[{}]},"497":{"partial":false,"source":"  return s;","missing":[{"startCol":2,"endCol":11}]}},"source":"var dust = {};\n\n(function(dust) {\n\ndust.cache = {};\n\ndust.register = function(name, tmpl) {\n  if (!name) return;\n  dust.cache[name] = tmpl;\n};\n\ndust.render = function(name, context, callback) {\n  var chunk = new Stub(callback).head;\n  dust.load(name, chunk, Context.wrap(context)).end();\n};\n\ndust.stream = function(name, context) {\n  var stream = new Stream();\n  dust.nextTick(function() {\n    dust.load(name, stream.head, Context.wrap(context)).end();\n  });\n  return stream;\n};\n\ndust.renderSource = function(source, context, callback) {\n  return dust.compileFn(source)(context, callback);\n};\n\ndust.compileFn = function(source, name) {\n  var tmpl = dust.loadSource(dust.compile(source, name));\n  return function(context, callback) {\n    var master = callback ? new Stub(callback) : new Stream();\n    dust.nextTick(function() {\n      tmpl(master.head, Context.wrap(context)).end();\n    });\n    return master;\n  }\n};\n\ndust.load = function(name, chunk, context) {\n  var tmpl = dust.cache[name];\n  if (tmpl) {\n    return tmpl(chunk, context);\n  } else {\n    if (dust.onLoad) {\n      return chunk.map(function(chunk) {\n        dust.onLoad(name, function(err, src) {\n          if (err) return chunk.setError(err);\n          if (!dust.cache[name]) dust.loadSource(dust.compile(src, name));\n          dust.cache[name](chunk, context).end();\n        });\n      });\n    }\n    return chunk.setError(new Error(\"Template Not Found: \" + name));\n  }\n};\n\ndust.loadSource = function(source, path) {\n  return eval(source);\n};\n\nif (Array.isArray) {\n  dust.isArray = Array.isArray;\n} else {\n  dust.isArray = function(arr) {\n    return Object.prototype.toString.call(arr) == \"[object Array]\";\n  };\n}\n\ndust.nextTick = function(callback) {\n  setTimeout(callback, 0);\n}\n\ndust.isEmpty = function(value) {\n  if (dust.isArray(value) && !value.length) return true;\n  if (value === 0) return false;\n  return (!value);\n};\n\ndust.filter = function(string, auto, filters) {\n  if (filters) {\n    for (var i=0, len=filters.length; i<len; i++) {\n      var name = filters[i];\n      if (name === \"s\") {\n        auto = null;\n      } else {\n        string = dust.filters[name](string);\n      }\n    }\n  }\n  if (auto) {\n    string = dust.filters[auto](string);\n  }\n  return string;\n};\n\ndust.filters = {\n  h: function(value) { return dust.escapeHtml(value); },\n  j: function(value) { return dust.escapeJs(value); },\n  u: encodeURI,\n  uc: encodeURIComponent\n}\n\nfunction Context(stack, global, blocks) {\n  this.stack  = stack;\n  this.global = global;\n  this.blocks = blocks;\n}\n\ndust.makeBase = function(global) {\n  return new Context(new Stack(), global);\n}\n\nContext.wrap = function(context) {\n  if (context instanceof Context) {\n    return context;\n  }\n  return new Context(new Stack(context));\n}\n\nContext.prototype.get = function(key) {\n  var ctx = this.stack, value;\n\n  while(ctx) {\n    if (ctx.isObject) {\n      value = ctx.head[key];\n      if (!(value === undefined)) {\n        return value;\n      }\n    }\n    ctx = ctx.tail;\n  }\n  return this.global ? this.global[key] : undefined;\n};\n\nContext.prototype.getPath = function(cur, down) {\n  var ctx = this.stack,\n      len = down.length;\n\n  if (cur && len === 0) return ctx.head;\n  if (!ctx.isObject) return undefined;\n  ctx = ctx.head;\n  var i = 0;\n  while(ctx && i < len) {\n    ctx = ctx[down[i]];\n    i++;\n  }\n  return ctx;\n};\n\nContext.prototype.push = function(head, idx, len) {\n  if( head ){\n   // loop index for a block section\n   head['$idx'] = idx;\n   // loop size for a block section\n   head['$len'] = len;\n  }\n  return new Context(new Stack(head, this.stack, idx, len), this.global, this.blocks);\n};\n\nContext.prototype.rebase = function(head) {\n  return new Context(new Stack(head), this.global, this.blocks);\n};\n\nContext.prototype.current = function() {\n  return this.stack.head;\n};\n\nContext.prototype.getBlock = function(key) {\n  var blocks = this.blocks;\n\n  if (!blocks) return;\n  var len = blocks.length, fn;\n  while (len--) {\n    fn = blocks[len][key];\n    if (fn) return fn;\n  }\n}\n\nContext.prototype.shiftBlocks = function(locals) {\n  var blocks = this.blocks;\n\n  if (locals) {\n    if (!blocks) {\n      newBlocks = [locals];\n    } else {\n      newBlocks = blocks.concat([locals]);\n    }\n    return new Context(this.stack, this.global, newBlocks);\n  }\n  return this;\n}\n\nfunction Stack(head, tail, idx, len) {\n  this.tail = tail;\n  this.isObject = !dust.isArray(head) && head && typeof head === \"object\";\n  this.head = head;\n  this.index = idx;\n  this.of = len;\n}\n\nfunction Stub(callback) {\n  this.head = new Chunk(this);\n  this.callback = callback;\n  this.out = '';\n}\n\nStub.prototype.flush = function() {\n  var chunk = this.head;\n\n  while (chunk) {\n    if (chunk.flushable) {\n      this.out += chunk.data;\n    } else if (chunk.error) {\n      this.callback(chunk.error);\n      this.flush = function() {};\n      return;\n    } else {\n      return;\n    }\n    chunk = chunk.next;\n    this.head = chunk;\n  }\n  this.callback(null, this.out);\n}\n\nfunction Stream() {\n  this.head = new Chunk(this);\n}\n\nStream.prototype.flush = function() {\n  var chunk = this.head;\n\n  while(chunk) {\n    if (chunk.flushable) {\n      this.emit('data', chunk.data);\n    } else if (chunk.error) {\n      this.emit('error', chunk.error);\n      this.flush = function() {};\n      return;\n    } else {\n      return;\n    }\n    chunk = chunk.next;\n    this.head = chunk;\n  }\n  this.emit('end');\n}\n\nStream.prototype.emit = function(type, data) {\n  var events = this.events;\n\n  if (events && events[type]) {\n    events[type](data);\n  }\n}\n\nStream.prototype.on = function(type, callback) {\n  if (!this.events) {\n    this.events = {};\n  }\n  this.events[type] = callback;\n  return this;\n}\n\nfunction Chunk(root, next, taps) {\n  this.root = root;\n  this.next = next;\n  this.data = '';\n  this.flushable = false;\n  this.taps = taps;\n}\n\nChunk.prototype.write = function(data) {\n  var taps  = this.taps;\n\n  if (taps) {\n    data = taps.go(data);\n  }\n  this.data += data;\n  return this;\n}\n\nChunk.prototype.end = function(data) {\n  if (data) {\n    this.write(data);\n  }\n  this.flushable = true;\n  this.root.flush();\n  return this;\n}\n\nChunk.prototype.map = function(callback) {\n  var cursor = new Chunk(this.root, this.next, this.taps),\n      branch = new Chunk(this.root, cursor, this.taps);\n\n  this.next = branch;\n  this.flushable = true;\n  callback(branch);\n  return cursor;\n}\n\nChunk.prototype.tap = function(tap) {\n  var taps = this.taps;\n\n  if (taps) {\n    this.taps = taps.push(tap);\n  } else {\n    this.taps = new Tap(tap);\n  }\n  return this;\n}\n\nChunk.prototype.untap = function() {\n  this.taps = this.taps.tail;\n  return this;\n}\n\nChunk.prototype.render = function(body, context) {\n  return body(this, context);\n}\n\nChunk.prototype.reference = function(elem, context, auto, filters) {\n  if (typeof elem === \"function\") {\n    elem = elem(this, context, null, {auto: auto, filters: filters});\n    if (elem instanceof Chunk) {\n      return elem;\n    }\n  }\n  if (!dust.isEmpty(elem)) {\n    return this.write(dust.filter(elem, auto, filters));\n  } else {\n    return this;\n  }\n};\n\nChunk.prototype.section = function(elem, context, bodies, params) {\n  if (typeof elem === \"function\") {\n    elem = elem(this, context, bodies, params);\n    if (elem instanceof Chunk) {\n      return elem;\n    }\n  }\n\n  var body = bodies.block,\n      skip = bodies['else'];\n\n  if (params) {\n    context = context.push(params);\n  }\n\n  if (dust.isArray(elem)) {\n    if (body) {\n      var len = elem.length, chunk = this;\n      for (var i=0; i<len; i++) {\n        chunk = body(chunk, context.push(elem[i], i, len));\n      }\n      return chunk;\n    }\n  } else if (elem === true) {\n    if (body) return body(this, context);\n  } else if (elem || elem === 0) {\n    if (body) return body(this, context.push(elem));\n  } else if (skip) {\n    return skip(this, context);\n  }\n  return this;\n};\n\nChunk.prototype.exists = function(elem, context, bodies) {\n  var body = bodies.block,\n      skip = bodies['else'];\n\n  if (!dust.isEmpty(elem)) {\n    if (body) return body(this, context);\n  } else if (skip) {\n    return skip(this, context);\n  }\n  return this;\n}\n\nChunk.prototype.notexists = function(elem, context, bodies) {\n  var body = bodies.block,\n      skip = bodies['else'];\n\n  if (dust.isEmpty(elem)) {\n    if (body) return body(this, context);\n  } else if (skip) {\n    return skip(this, context);\n  }\n  return this;\n}\n\nChunk.prototype.block = function(elem, context, bodies) {\n  var body = bodies.block;\n\n  if (elem) {\n    body = elem;\n  }\n\n  if (body) {\n    return body(this, context);\n  }\n  return this;\n};\n\nChunk.prototype.partial = function(elem, context) {\n  if (typeof elem === \"function\") {\n    return this.capture(elem, context, function(name, chunk) {\n      dust.load(name, chunk, context).end();\n    });\n  }\n  return dust.load(elem, this, context);\n};\n\nChunk.prototype.helper = function(name, context, bodies, params) {\n  return dust.helpers[name](this, context, bodies, params);\n};\n\nChunk.prototype.capture = function(body, context, callback) {\n  return this.map(function(chunk) {\n    var stub = new Stub(function(err, out) {\n      if (err) {\n        chunk.setError(err);\n      } else {\n        callback(out, chunk);\n      }\n    });\n    body(stub.head, context).end();\n  });\n};\n\nChunk.prototype.setError = function(err) {\n  this.error = err;\n  this.root.flush();\n  return this;\n};\n\nfunction Tap(head, tail) {\n  this.head = head;\n  this.tail = tail;\n}\n\nTap.prototype.push = function(tap) {\n  return new Tap(tap, this);\n};\n\nTap.prototype.go = function(value) {\n  var tap = this;\n\n  while(tap) {\n    value = tap.head(value);\n    tap = tap.tail;\n  }\n  return value;\n};\n\nvar HCHARS = new RegExp(/[&<>\\\"]/),\n    AMP    = /&/g,\n    LT     = /</g,\n    GT     = />/g,\n    QUOT   = /\\\"/g;\n\ndust.escapeHtml = function(s) {\n  if (typeof s === \"string\") {\n    if (!HCHARS.test(s)) {\n      return s;\n    }\n    return s.replace(AMP,'&amp;').replace(LT,'&lt;').replace(GT,'&gt;').replace(QUOT,'&quot;');\n  }\n  return s;\n};\n\nvar BS = /\\\\/g,\n    CR = /\\r/g,\n    LS = /\\u2028/g,\n    PS = /\\u2029/g,\n    NL = /\\n/g,\n    LF = /\\f/g,\n    SQ = /'/g,\n    DQ = /\"/g,\n    TB = /\\t/g;\n\ndust.escapeJs = function(s) {\n  if (typeof s === \"string\") {\n    return s\n      .replace(BS, '\\\\\\\\')\n      .replace(DQ, '\\\\\"')\n      .replace(SQ, \"\\\\'\")\n      .replace(CR, '\\\\r')\n      .replace(LS, '\\\\u2028')\n      .replace(PS, '\\\\u2029')\n      .replace(NL, '\\\\n')\n      .replace(LF, '\\\\f')\n      .replace(TB, \"\\\\t\");\n  }\n  return s;\n};\n\n})(dust);\n\nif (typeof exports !== \"undefined\") {\n  dust.helpers = require(\"./dust-helpers\").helpers;\n  if (typeof process !== \"undefined\") {\n      require('./server')(dust);\n  }\n  module.exports = dust;\n}","blocks":{"total":137,"seen":93,"missing":44,"percentage":0.6788321167883211}},"hash":"dffcc0c04bc8503dc9bf47a6404e83c9"},"/Users/jdemorai/projects/dust-Linkedin/dustjs/lib/dust-helpers.js":{"stats":{"percentage":0.9019607843137255,"lines":[{"lineno":13},{"lineno":28},{"lineno":42},{"lineno":45},{"lineno":51}],"missing":5,"seen":46,"total":51,"coverage":{"13":{"partial":false,"source":"    return bodies.block(chunk, context.push(context.stack.index));","missing":[{"startCol":4,"endCol":66},{"startCol":11,"endCol":65},{"startCol":31,"endCol":64}]},"28":{"partial":false,"source":"          cond = false;","missing":[{"startCol":10,"endCol":23}]},"42":{"partial":false,"source":"        window.console.log( \"No expression given!\" );","missing":[{"startCol":8,"endCol":52}]},"45":{"partial":false,"source":"    return chunk;","missing":[{"startCol":4,"endCol":17}]},"51":{"partial":true,"source":"})(typeof exports !== 'undefined' ? exports : window.dust);","missing":[{"startCol":46,"endCol":57}]}},"source":"(function(dust){\n  \nvar helpers = {\n  \n  sep: function(chunk, context, bodies) {\n    if (context.stack.index === context.stack.of - 1) {\n      return chunk;\n    }\n    return bodies.block(chunk, context);\n  },\n\n  idx: function(chunk, context, bodies) {\n    return bodies.block(chunk, context.push(context.stack.index));\n  },\n  \n  if: function( chunk, context, bodies, params ){\n    var cond = ( params.cond );\n    \n    if( params && params.cond ){\n      // resolve dust references in the expression\n      if( typeof cond === \"function\" ){\n        cond = '';\n        chunk.tap( function( data ){\n          cond += data;\n          return '';\n        } ).render( params.cond, context ).untap();\n        if( cond === '' ){\n          cond = false;\n        }\n      }\n      // eval expressions with no dust references\n      if( eval( cond ) ){\n       return chunk.render( bodies.block, context );\n      } \n      if( bodies['else'] ){\n       return chunk.render( bodies['else'], context );\n      }\n    } \n    // no condition\n    else {\n      if( window.console ){\n        window.console.log( \"No expression given!\" );\n      }\n    }\n    return chunk;\n  }\n};\n\ndust.helpers = helpers;\n\n})(typeof exports !== 'undefined' ? exports : window.dust);","blocks":{"total":13,"seen":9,"missing":4,"percentage":0.6923076923076923}},"hash":"8ca146d0a7aca57164a5993542184828"},"/Users/jdemorai/projects/dust-Linkedin/dustjs/lib/server.js":{"stats":{"percentage":1,"lines":[],"missing":0,"seen":18,"total":18,"coverage":{},"source":"var path = require('path'),\n    parser = require('./parser'),\n    compiler = require('./compiler'),\n    vm = require('vm');\n\nmodule.exports = function(dust) {\n  compiler.parse = parser.parse;\n  dust.compile = compiler.compile;\n\n  dust.loadSource = function(source, path) {\n    return vm.runInNewContext(source, {dust: dust}, path);\n  };\n\n  dust.nextTick = process.nextTick;\n\n  // expose optimizers in commonjs env too\n  dust.optimizers = compiler.optimizers;\n}","blocks":{"total":2,"seen":2,"missing":0,"percentage":1}},"hash":"d0ac26470f0872fb0514ad3da0935f2a"},"/Users/jdemorai/projects/dust-Linkedin/dustjs/lib/parser.js":{"stats":{"percentage":0.8606891441274546,"lines":[{"lineno":44},{"lineno":45},{"lineno":58},{"lineno":60},{"lineno":61},{"lineno":62},{"lineno":65},{"lineno":69},{"lineno":71},{"lineno":72},{"lineno":73},{"lineno":75},{"lineno":76},{"lineno":79},{"lineno":100},{"lineno":115},{"lineno":116},{"lineno":129},{"lineno":133},{"lineno":134},{"lineno":150},{"lineno":151},{"lineno":200},{"lineno":201},{"lineno":218},{"lineno":222},{"lineno":223},{"lineno":226},{"lineno":227},{"lineno":230},{"lineno":231},{"lineno":234},{"lineno":235},{"lineno":265},{"lineno":267},{"lineno":275},{"lineno":276},{"lineno":279},{"lineno":280},{"lineno":332},{"lineno":344},{"lineno":345},{"lineno":348},{"lineno":349},{"lineno":386},{"lineno":387},{"lineno":400},{"lineno":402},{"lineno":412},{"lineno":413},{"lineno":416},{"lineno":417},{"lineno":420},{"lineno":421},{"lineno":424},{"lineno":425},{"lineno":429},{"lineno":433},{"lineno":434},{"lineno":437},{"lineno":438},{"lineno":452},{"lineno":453},{"lineno":466},{"lineno":474},{"lineno":475},{"lineno":493},{"lineno":497},{"lineno":498},{"lineno":514},{"lineno":515},{"lineno":532},{"lineno":534},{"lineno":546},{"lineno":552},{"lineno":553},{"lineno":556},{"lineno":557},{"lineno":560},{"lineno":561},{"lineno":582},{"lineno":583},{"lineno":584},{"lineno":585},{"lineno":586},{"lineno":588},{"lineno":590},{"lineno":593},{"lineno":594},{"lineno":595},{"lineno":596},{"lineno":598},{"lineno":599},{"lineno":600},{"lineno":602},{"lineno":605},{"lineno":606},{"lineno":608},{"lineno":609},{"lineno":612},{"lineno":613},{"lineno":616},{"lineno":617},{"lineno":624},{"lineno":627},{"lineno":635},{"lineno":639},{"lineno":640},{"lineno":643},{"lineno":644},{"lineno":658},{"lineno":659},{"lineno":676},{"lineno":688},{"lineno":689},{"lineno":692},{"lineno":693},{"lineno":696},{"lineno":697},{"lineno":704},{"lineno":705},{"lineno":723},{"lineno":724},{"lineno":728},{"lineno":732},{"lineno":733},{"lineno":734},{"lineno":735},{"lineno":736},{"lineno":737},{"lineno":738},{"lineno":740},{"lineno":741},{"lineno":744},{"lineno":745},{"lineno":748},{"lineno":749},{"lineno":756},{"lineno":757},{"lineno":760},{"lineno":763},{"lineno":771},{"lineno":775},{"lineno":776},{"lineno":779},{"lineno":780},{"lineno":812},{"lineno":813},{"lineno":816},{"lineno":817},{"lineno":852},{"lineno":853},{"lineno":868},{"lineno":890},{"lineno":900},{"lineno":902},{"lineno":910},{"lineno":911},{"lineno":914},{"lineno":915},{"lineno":918},{"lineno":919},{"lineno":922},{"lineno":923},{"lineno":958},{"lineno":959},{"lineno":974},{"lineno":982},{"lineno":983},{"lineno":1003},{"lineno":1004},{"lineno":1008},{"lineno":1012},{"lineno":1013},{"lineno":1014},{"lineno":1016},{"lineno":1017},{"lineno":1024},{"lineno":1027},{"lineno":1035},{"lineno":1039},{"lineno":1040},{"lineno":1043},{"lineno":1044},{"lineno":1058},{"lineno":1059},{"lineno":1074},{"lineno":1084},{"lineno":1085},{"lineno":1088},{"lineno":1089},{"lineno":1124},{"lineno":1125},{"lineno":1162},{"lineno":1163},{"lineno":1177},{"lineno":1178},{"lineno":1196},{"lineno":1227},{"lineno":1228},{"lineno":1232},{"lineno":1236},{"lineno":1237},{"lineno":1238},{"lineno":1240},{"lineno":1241},{"lineno":1248},{"lineno":1251},{"lineno":1267},{"lineno":1268},{"lineno":1292},{"lineno":1311},{"lineno":1312},{"lineno":1340},{"lineno":1351},{"lineno":1362},{"lineno":1369},{"lineno":1370},{"lineno":1386},{"lineno":1387},{"lineno":1401},{"lineno":1402},{"lineno":1413},{"lineno":1415},{"lineno":1420},{"lineno":1421},{"lineno":1425},{"lineno":1429},{"lineno":1435},{"lineno":1436},{"lineno":1439},{"lineno":1442},{"lineno":1448},{"lineno":1456},{"lineno":1458},{"lineno":1470},{"lineno":1484},{"lineno":1485},{"lineno":1505},{"lineno":1507},{"lineno":1519},{"lineno":1526},{"lineno":1528},{"lineno":1534},{"lineno":1535},{"lineno":1538},{"lineno":1539},{"lineno":1542},{"lineno":1543},{"lineno":1547},{"lineno":1551},{"lineno":1552},{"lineno":1557},{"lineno":1562},{"lineno":1563},{"lineno":1577},{"lineno":1578},{"lineno":1584},{"lineno":1622},{"lineno":1623},{"lineno":1641},{"lineno":1642},{"lineno":1683},{"lineno":1684},{"lineno":1695},{"lineno":1696},{"lineno":1705},{"lineno":1715},{"lineno":1716},{"lineno":1719},{"lineno":1720},{"lineno":1783},{"lineno":1877},{"lineno":1878},{"lineno":1883},{"lineno":1891},{"lineno":1907},{"lineno":1908},{"lineno":1949},{"lineno":1950},{"lineno":1955},{"lineno":1963},{"lineno":1979},{"lineno":1980},{"lineno":2009},{"lineno":2010},{"lineno":2031},{"lineno":2032},{"lineno":2036},{"lineno":2040},{"lineno":2043},{"lineno":2076},{"lineno":2087},{"lineno":2088},{"lineno":2092},{"lineno":2099},{"lineno":2100},{"lineno":2107},{"lineno":2109},{"lineno":2115},{"lineno":2116},{"lineno":2119},{"lineno":2120},{"lineno":2124},{"lineno":2128},{"lineno":2129},{"lineno":2144},{"lineno":2159},{"lineno":2161},{"lineno":2167},{"lineno":2168},{"lineno":2189},{"lineno":2191},{"lineno":2197},{"lineno":2198},{"lineno":2201},{"lineno":2202},{"lineno":2247},{"lineno":2260},{"lineno":2261},{"lineno":2272},{"lineno":2273},{"lineno":2280},{"lineno":2282},{"lineno":2288},{"lineno":2289},{"lineno":2292},{"lineno":2293},{"lineno":2296},{"lineno":2297},{"lineno":2324},{"lineno":2325},{"lineno":2332},{"lineno":2334},{"lineno":2340},{"lineno":2341},{"lineno":2344},{"lineno":2345},{"lineno":2353},{"lineno":2360},{"lineno":2361},{"lineno":2364},{"lineno":2365},{"lineno":2410},{"lineno":2438},{"lineno":2466},{"lineno":2473},{"lineno":2474},{"lineno":2478},{"lineno":2482},{"lineno":2485},{"lineno":2486},{"lineno":2490},{"lineno":2494},{"lineno":2497},{"lineno":2498},{"lineno":2502},{"lineno":2506},{"lineno":2509},{"lineno":2510},{"lineno":2514},{"lineno":2518},{"lineno":2540},{"lineno":2541},{"lineno":2551},{"lineno":2579},{"lineno":2581},{"lineno":2593},{"lineno":2613},{"lineno":2614},{"lineno":2615},{"lineno":2617},{"lineno":2618},{"lineno":2619},{"lineno":2680},{"lineno":2699}],"missing":376,"seen":2323,"total":2699,"coverage":{"44":{"partial":false,"source":"        if (parseFunctions[startRule] === undefined) {","missing":[{"startCol":12,"endCol":51}]},"45":{"partial":false,"source":"          throw new Error(\"Invalid rule name: \" + quote(startRule) + \".\");","missing":[{"startCol":10,"endCol":74},{"startCol":26,"endCol":66},{"startCol":50,"endCol":66}]},"58":{"partial":false,"source":"        var result = input;","missing":[{"startCol":8,"endCol":27}]},"60":{"partial":false,"source":"        var padLength = length - input.length;","missing":[{"startCol":8,"endCol":46},{"startCol":24,"endCol":45}]},"61":{"partial":false,"source":"        for (var i = 0; i < padLength; i++) {","missing":[{"startCol":24,"endCol":37},{"startCol":39,"endCol":42}]},"62":{"partial":false,"source":"          result = padding + result;","missing":[{"startCol":10,"endCol":36},{"startCol":19,"endCol":35}]},"65":{"partial":false,"source":"        return result;","missing":[{"startCol":8,"endCol":22}]},"69":{"partial":false,"source":"        var charCode = ch.charCodeAt(0);","missing":[{"startCol":8,"endCol":40},{"startCol":23,"endCol":39}]},"71":{"partial":false,"source":"        if (charCode <= 0xFF) {","missing":[{"startCol":12,"endCol":28}]},"72":{"partial":false,"source":"          var escapeChar = 'x';","missing":[{"startCol":10,"endCol":31}]},"73":{"partial":false,"source":"          var length = 2;","missing":[{"startCol":10,"endCol":25}]},"75":{"partial":false,"source":"          var escapeChar = 'u';","missing":[{"startCol":10,"endCol":31}]},"76":{"partial":false,"source":"          var length = 4;","missing":[{"startCol":10,"endCol":25}]},"79":{"partial":false,"source":"        return '\\\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);","missing":[{"startCol":8,"endCol":93},{"startCol":15,"endCol":32},{"startCol":35,"endCol":92},{"startCol":43,"endCol":78},{"startCol":60,"endCol":64}]},"100":{"partial":false,"source":"          return;","missing":[{"startCol":10,"endCol":17}]},"115":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"116":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"129":{"partial":false,"source":"          : null;","missing":[{"startCol":12,"endCol":16}]},"133":{"partial":false,"source":"          var result0 = null;","missing":[{"startCol":10,"endCol":29}]},"134":{"partial":false,"source":"          pos = savedPos0;","missing":[{"startCol":10,"endCol":26}]},"150":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"151":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"200":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"201":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"218":{"partial":true,"source":"                  var result15 = (function() {if (!result8) return true; return result8[1].text === result12.text})() ? '' : null;","missing":[{"startCol":73,"endCol":113},{"startCol":80,"endCol":113},{"startCol":125,"endCol":129}]},"222":{"partial":false,"source":"                    var result8 = null;","missing":[{"startCol":20,"endCol":39}]},"223":{"partial":false,"source":"                    pos = savedPos3;","missing":[{"startCol":20,"endCol":36}]},"226":{"partial":false,"source":"                  var result8 = null;","missing":[{"startCol":18,"endCol":37}]},"227":{"partial":false,"source":"                  pos = savedPos3;","missing":[{"startCol":18,"endCol":34}]},"230":{"partial":false,"source":"                var result8 = null;","missing":[{"startCol":16,"endCol":35}]},"231":{"partial":false,"source":"                pos = savedPos3;","missing":[{"startCol":16,"endCol":32}]},"234":{"partial":false,"source":"              var result8 = null;","missing":[{"startCol":14,"endCol":33}]},"235":{"partial":false,"source":"              pos = savedPos3;","missing":[{"startCol":14,"endCol":30}]},"265":{"partial":false,"source":"              var result5 = null;","missing":[{"startCol":14,"endCol":33}]},"267":{"partial":false,"source":"                matchFailed(\"\\\"/\\\"\");","missing":[{"startCol":16,"endCol":36}]},"275":{"partial":false,"source":"                var result2 = null;","missing":[{"startCol":16,"endCol":35}]},"276":{"partial":false,"source":"                pos = savedPos1;","missing":[{"startCol":16,"endCol":32}]},"279":{"partial":false,"source":"              var result2 = null;","missing":[{"startCol":14,"endCol":33}]},"280":{"partial":false,"source":"              pos = savedPos1;","missing":[{"startCol":14,"endCol":30}]},"332":{"partial":false,"source":"              matchFailed(\"[#?^<+@%]\");","missing":[{"startCol":14,"endCol":38}]},"344":{"partial":false,"source":"                  var result1 = null;","missing":[{"startCol":18,"endCol":37}]},"345":{"partial":false,"source":"                  pos = savedPos1;","missing":[{"startCol":18,"endCol":34}]},"348":{"partial":false,"source":"                var result1 = null;","missing":[{"startCol":16,"endCol":35}]},"349":{"partial":false,"source":"                pos = savedPos1;","missing":[{"startCol":16,"endCol":32}]},"386":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"387":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"400":{"partial":false,"source":"            var result4 = null;","missing":[{"startCol":12,"endCol":31}]},"402":{"partial":false,"source":"              matchFailed(\"\\\"/\\\"\");","missing":[{"startCol":14,"endCol":34}]},"412":{"partial":false,"source":"                var result1 = null;","missing":[{"startCol":16,"endCol":35}]},"413":{"partial":false,"source":"                pos = savedPos1;","missing":[{"startCol":16,"endCol":32}]},"416":{"partial":false,"source":"              var result1 = null;","missing":[{"startCol":14,"endCol":33}]},"417":{"partial":false,"source":"              pos = savedPos1;","missing":[{"startCol":14,"endCol":30}]},"420":{"partial":false,"source":"            var result1 = null;","missing":[{"startCol":12,"endCol":31}]},"421":{"partial":false,"source":"            pos = savedPos1;","missing":[{"startCol":12,"endCol":28}]},"424":{"partial":false,"source":"          var result1 = null;","missing":[{"startCol":10,"endCol":29}]},"425":{"partial":false,"source":"          pos = savedPos1;","missing":[{"startCol":10,"endCol":26}]},"429":{"partial":false,"source":"          : null;","missing":[{"startCol":12,"endCol":16}]},"433":{"partial":false,"source":"          var result0 = null;","missing":[{"startCol":10,"endCol":29}]},"434":{"partial":false,"source":"          pos = savedPos0;","missing":[{"startCol":10,"endCol":26}]},"437":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"438":{"partial":false,"source":"          matchFailed(\"end tag\");","missing":[{"startCol":10,"endCol":32}]},"452":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"453":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"466":{"partial":false,"source":"            matchFailed(\"\\\":\\\"\");","missing":[{"startCol":12,"endCol":32}]},"474":{"partial":false,"source":"            var result4 = null;","missing":[{"startCol":12,"endCol":31}]},"475":{"partial":false,"source":"            pos = savedPos2;","missing":[{"startCol":12,"endCol":28}]},"493":{"partial":false,"source":"          : null;","missing":[{"startCol":12,"endCol":16}]},"497":{"partial":false,"source":"          var result0 = null;","missing":[{"startCol":10,"endCol":29}]},"498":{"partial":false,"source":"          pos = savedPos0;","missing":[{"startCol":10,"endCol":26}]},"514":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"515":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"532":{"partial":false,"source":"              var result8 = null;","missing":[{"startCol":14,"endCol":33}]},"534":{"partial":false,"source":"                matchFailed(\"\\\"=\\\"\");","missing":[{"startCol":16,"endCol":36}]},"546":{"partial":false,"source":"                  var result9 = null;;","missing":[{"startCol":18,"endCol":37}]},"552":{"partial":false,"source":"                var result4 = null;","missing":[{"startCol":16,"endCol":35}]},"553":{"partial":false,"source":"                pos = savedPos2;","missing":[{"startCol":16,"endCol":32}]},"556":{"partial":false,"source":"              var result4 = null;","missing":[{"startCol":14,"endCol":33}]},"557":{"partial":false,"source":"              pos = savedPos2;","missing":[{"startCol":14,"endCol":30}]},"560":{"partial":false,"source":"            var result4 = null;","missing":[{"startCol":12,"endCol":31}]},"561":{"partial":false,"source":"            pos = savedPos2;","missing":[{"startCol":12,"endCol":28}]},"582":{"partial":false,"source":"            var result7 = parse_key();","missing":[{"startCol":12,"endCol":38},{"startCol":26,"endCol":37}]},"583":{"partial":false,"source":"            if (result7 !== null) {","missing":[{"startCol":16,"endCol":32}]},"584":{"partial":false,"source":"              if (input.substr(pos, 1) === \"=\") {","missing":[{"startCol":18,"endCol":38}]},"585":{"partial":false,"source":"                var result8 = \"=\";","missing":[{"startCol":16,"endCol":34}]},"586":{"partial":false,"source":"                pos += 1;","missing":[{"startCol":16,"endCol":25}]},"588":{"partial":false,"source":"                var result8 = null;","missing":[{"startCol":16,"endCol":35}]},"590":{"partial":false,"source":"                  matchFailed(\"\\\"=\\\"\");","missing":[{"startCol":18,"endCol":38}]},"593":{"partial":false,"source":"              if (result8 !== null) {","missing":[{"startCol":18,"endCol":34}]},"594":{"partial":false,"source":"                var result11 = parse_identifier();","missing":[{"startCol":16,"endCol":50},{"startCol":31,"endCol":49}]},"595":{"partial":false,"source":"                if (result11 !== null) {","missing":[{"startCol":20,"endCol":37}]},"596":{"partial":false,"source":"                  var result9 = result11;","missing":[{"startCol":18,"endCol":41}]},"598":{"partial":false,"source":"                  var result10 = parse_inline();","missing":[{"startCol":18,"endCol":48},{"startCol":33,"endCol":47}]},"599":{"partial":false,"source":"                  if (result10 !== null) {","missing":[{"startCol":22,"endCol":39}]},"600":{"partial":false,"source":"                    var result9 = result10;","missing":[{"startCol":20,"endCol":43}]},"602":{"partial":false,"source":"                    var result9 = null;;","missing":[{"startCol":20,"endCol":39}]},"605":{"partial":false,"source":"                if (result9 !== null) {","missing":[{"startCol":20,"endCol":36}]},"606":{"partial":false,"source":"                  var result4 = [result6, result7, result8, result9];","missing":[{"startCol":18,"endCol":69}]},"608":{"partial":false,"source":"                  var result4 = null;","missing":[{"startCol":18,"endCol":37}]},"609":{"partial":false,"source":"                  pos = savedPos2;","missing":[{"startCol":18,"endCol":34}]},"612":{"partial":false,"source":"                var result4 = null;","missing":[{"startCol":16,"endCol":35}]},"613":{"partial":false,"source":"                pos = savedPos2;","missing":[{"startCol":16,"endCol":32}]},"616":{"partial":false,"source":"              var result4 = null;","missing":[{"startCol":14,"endCol":33}]},"617":{"partial":false,"source":"              pos = savedPos2;","missing":[{"startCol":14,"endCol":30}]},"624":{"partial":false,"source":"            ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[1], result4[3])","missing":[{"startCol":14,"endCol":92},{"startCol":31,"endCol":66}]},"627":{"partial":false,"source":"            var result3 = result5;","missing":[{"startCol":12,"endCol":34}]},"635":{"partial":false,"source":"          : null;","missing":[{"startCol":12,"endCol":16}]},"639":{"partial":false,"source":"          var result0 = null;","missing":[{"startCol":10,"endCol":29}]},"640":{"partial":false,"source":"          pos = savedPos0;","missing":[{"startCol":10,"endCol":26}]},"643":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"644":{"partial":false,"source":"          matchFailed(\"params\");","missing":[{"startCol":10,"endCol":31}]},"658":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"659":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"676":{"partial":false,"source":"              matchFailed(\"\\\":\\\"\");","missing":[{"startCol":14,"endCol":34}]},"688":{"partial":false,"source":"                  var result4 = null;","missing":[{"startCol":18,"endCol":37}]},"689":{"partial":false,"source":"                  pos = savedPos2;","missing":[{"startCol":18,"endCol":34}]},"692":{"partial":false,"source":"                var result4 = null;","missing":[{"startCol":16,"endCol":35}]},"693":{"partial":false,"source":"                pos = savedPos2;","missing":[{"startCol":16,"endCol":32}]},"696":{"partial":false,"source":"              var result4 = null;","missing":[{"startCol":14,"endCol":33}]},"697":{"partial":false,"source":"              pos = savedPos2;","missing":[{"startCol":14,"endCol":30}]},"704":{"partial":false,"source":"          var result4 = null;","missing":[{"startCol":10,"endCol":29}]},"705":{"partial":false,"source":"          pos = savedPos2;","missing":[{"startCol":10,"endCol":26}]},"723":{"partial":false,"source":"              var result7 = \":\";","missing":[{"startCol":14,"endCol":32}]},"724":{"partial":false,"source":"              pos += 1;","missing":[{"startCol":14,"endCol":23}]},"728":{"partial":false,"source":"                matchFailed(\"\\\":\\\"\");","missing":[{"startCol":16,"endCol":36}]},"732":{"partial":false,"source":"              var result8 = parse_key();","missing":[{"startCol":14,"endCol":40},{"startCol":28,"endCol":39}]},"733":{"partial":false,"source":"              if (result8 !== null) {","missing":[{"startCol":18,"endCol":34}]},"734":{"partial":false,"source":"                var result9 = parse_rd();","missing":[{"startCol":16,"endCol":41},{"startCol":30,"endCol":40}]},"735":{"partial":false,"source":"                if (result9 !== null) {","missing":[{"startCol":20,"endCol":36}]},"736":{"partial":false,"source":"                  var result10 = parse_body();","missing":[{"startCol":18,"endCol":46},{"startCol":33,"endCol":45}]},"737":{"partial":false,"source":"                  if (result10 !== null) {","missing":[{"startCol":22,"endCol":39}]},"738":{"partial":false,"source":"                    var result4 = [result6, result7, result8, result9, result10];","missing":[{"startCol":20,"endCol":81}]},"740":{"partial":false,"source":"                    var result4 = null;","missing":[{"startCol":20,"endCol":39}]},"741":{"partial":false,"source":"                    pos = savedPos2;","missing":[{"startCol":20,"endCol":36}]},"744":{"partial":false,"source":"                  var result4 = null;","missing":[{"startCol":18,"endCol":37}]},"745":{"partial":false,"source":"                  pos = savedPos2;","missing":[{"startCol":18,"endCol":34}]},"748":{"partial":false,"source":"                var result4 = null;","missing":[{"startCol":16,"endCol":35}]},"749":{"partial":false,"source":"                pos = savedPos2;","missing":[{"startCol":16,"endCol":32}]},"756":{"partial":false,"source":"            var result4 = null;","missing":[{"startCol":12,"endCol":31}]},"757":{"partial":false,"source":"            pos = savedPos2;","missing":[{"startCol":12,"endCol":28}]},"760":{"partial":false,"source":"            ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[2], result4[4])","missing":[{"startCol":14,"endCol":92},{"startCol":31,"endCol":66}]},"763":{"partial":false,"source":"            var result3 = result5;","missing":[{"startCol":12,"endCol":34}]},"771":{"partial":false,"source":"          : null;","missing":[{"startCol":12,"endCol":16}]},"775":{"partial":false,"source":"          var result0 = null;","missing":[{"startCol":10,"endCol":29}]},"776":{"partial":false,"source":"          pos = savedPos0;","missing":[{"startCol":10,"endCol":26}]},"779":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"780":{"partial":false,"source":"          matchFailed(\"bodies\");","missing":[{"startCol":10,"endCol":31}]},"812":{"partial":false,"source":"                var result1 = null;","missing":[{"startCol":16,"endCol":35}]},"813":{"partial":false,"source":"                pos = savedPos1;","missing":[{"startCol":16,"endCol":32}]},"816":{"partial":false,"source":"              var result1 = null;","missing":[{"startCol":14,"endCol":33}]},"817":{"partial":false,"source":"              pos = savedPos1;","missing":[{"startCol":14,"endCol":30}]},"852":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"853":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"868":{"partial":false,"source":"              matchFailed(\"\\\">\\\"\");","missing":[{"startCol":14,"endCol":34}]},"890":{"partial":false,"source":"                var result5 = null;;","missing":[{"startCol":16,"endCol":35}]},"900":{"partial":false,"source":"                  var result7 = null;","missing":[{"startCol":18,"endCol":37}]},"902":{"partial":false,"source":"                    matchFailed(\"\\\"/\\\"\");","missing":[{"startCol":20,"endCol":40}]},"910":{"partial":false,"source":"                    var result1 = null;","missing":[{"startCol":20,"endCol":39}]},"911":{"partial":false,"source":"                    pos = savedPos1;","missing":[{"startCol":20,"endCol":36}]},"914":{"partial":false,"source":"                  var result1 = null;","missing":[{"startCol":18,"endCol":37}]},"915":{"partial":false,"source":"                  pos = savedPos1;","missing":[{"startCol":18,"endCol":34}]},"918":{"partial":false,"source":"                var result1 = null;","missing":[{"startCol":16,"endCol":35}]},"919":{"partial":false,"source":"                pos = savedPos1;","missing":[{"startCol":16,"endCol":32}]},"922":{"partial":false,"source":"              var result1 = null;","missing":[{"startCol":14,"endCol":33}]},"923":{"partial":false,"source":"              pos = savedPos1;","missing":[{"startCol":14,"endCol":30}]},"958":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"959":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"974":{"partial":false,"source":"            matchFailed(\"\\\"|\\\"\");","missing":[{"startCol":12,"endCol":32}]},"982":{"partial":false,"source":"            var result4 = null;","missing":[{"startCol":12,"endCol":31}]},"983":{"partial":false,"source":"            pos = savedPos2;","missing":[{"startCol":12,"endCol":28}]},"1003":{"partial":false,"source":"            var result6 = \"|\";","missing":[{"startCol":12,"endCol":30}]},"1004":{"partial":false,"source":"            pos += 1;","missing":[{"startCol":12,"endCol":21}]},"1008":{"partial":false,"source":"              matchFailed(\"\\\"|\\\"\");","missing":[{"startCol":14,"endCol":34}]},"1012":{"partial":false,"source":"            var result7 = parse_key();","missing":[{"startCol":12,"endCol":38},{"startCol":26,"endCol":37}]},"1013":{"partial":false,"source":"            if (result7 !== null) {","missing":[{"startCol":16,"endCol":32}]},"1014":{"partial":false,"source":"              var result4 = [result6, result7];","missing":[{"startCol":14,"endCol":47}]},"1016":{"partial":false,"source":"              var result4 = null;","missing":[{"startCol":14,"endCol":33}]},"1017":{"partial":false,"source":"              pos = savedPos2;","missing":[{"startCol":14,"endCol":30}]},"1024":{"partial":false,"source":"            ? (function(n) {return n})(result4[1])","missing":[{"startCol":14,"endCol":50},{"startCol":28,"endCol":36}]},"1027":{"partial":false,"source":"            var result3 = result5;","missing":[{"startCol":12,"endCol":34}]},"1035":{"partial":false,"source":"          : null;","missing":[{"startCol":12,"endCol":16}]},"1039":{"partial":false,"source":"          var result0 = null;","missing":[{"startCol":10,"endCol":29}]},"1040":{"partial":false,"source":"          pos = savedPos0;","missing":[{"startCol":10,"endCol":26}]},"1043":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"1044":{"partial":false,"source":"          matchFailed(\"filters\");","missing":[{"startCol":10,"endCol":32}]},"1058":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"1059":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"1074":{"partial":false,"source":"              matchFailed(\"\\\"~\\\"\");","missing":[{"startCol":14,"endCol":34}]},"1084":{"partial":false,"source":"                var result1 = null;","missing":[{"startCol":16,"endCol":35}]},"1085":{"partial":false,"source":"                pos = savedPos1;","missing":[{"startCol":16,"endCol":32}]},"1088":{"partial":false,"source":"              var result1 = null;","missing":[{"startCol":14,"endCol":33}]},"1089":{"partial":false,"source":"              pos = savedPos1;","missing":[{"startCol":14,"endCol":30}]},"1124":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"1125":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"1162":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"1163":{"partial":false,"source":"          matchFailed(\"identifier\");","missing":[{"startCol":10,"endCol":35}]},"1177":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"1178":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"1196":{"partial":false,"source":"              matchFailed(\"\\\".\\\"\");","missing":[{"startCol":14,"endCol":34}]},"1227":{"partial":false,"source":"                var result12 = \".\";","missing":[{"startCol":16,"endCol":35}]},"1228":{"partial":false,"source":"                pos += 1;","missing":[{"startCol":16,"endCol":25}]},"1232":{"partial":false,"source":"                  matchFailed(\"\\\".\\\"\");","missing":[{"startCol":18,"endCol":38}]},"1236":{"partial":false,"source":"                var result13 = parse_key();","missing":[{"startCol":16,"endCol":43},{"startCol":31,"endCol":42}]},"1237":{"partial":false,"source":"                if (result13 !== null) {","missing":[{"startCol":20,"endCol":37}]},"1238":{"partial":false,"source":"                  var result10 = [result12, result13];","missing":[{"startCol":18,"endCol":54}]},"1240":{"partial":false,"source":"                  var result10 = null;","missing":[{"startCol":18,"endCol":38}]},"1241":{"partial":false,"source":"                  pos = savedPos4;","missing":[{"startCol":18,"endCol":34}]},"1248":{"partial":false,"source":"                ? (function(k) {return k})(result10[1])","missing":[{"startCol":18,"endCol":55},{"startCol":32,"endCol":40}]},"1251":{"partial":false,"source":"                var result9 = result11;","missing":[{"startCol":16,"endCol":39}]},"1267":{"partial":false,"source":"          var result5 = null;","missing":[{"startCol":10,"endCol":29}]},"1268":{"partial":false,"source":"          pos = savedPos2;","missing":[{"startCol":10,"endCol":26}]},"1292":{"partial":false,"source":"              matchFailed(\"\\\".\\\"\");","missing":[{"startCol":14,"endCol":34}]},"1311":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"1312":{"partial":false,"source":"          matchFailed(\"path\");","missing":[{"startCol":10,"endCol":29}]},"1340":{"partial":false,"source":"            matchFailed(\"[a-zA-Z_$]\");","missing":[{"startCol":12,"endCol":37}]},"1351":{"partial":false,"source":"              matchFailed(\"[0-9a-zA-Z_$]\");","missing":[{"startCol":14,"endCol":42}]},"1362":{"partial":false,"source":"                matchFailed(\"[0-9a-zA-Z_$]\");","missing":[{"startCol":16,"endCol":44}]},"1369":{"partial":false,"source":"            var result1 = null;","missing":[{"startCol":12,"endCol":31}]},"1370":{"partial":false,"source":"            pos = savedPos1;","missing":[{"startCol":12,"endCol":28}]},"1386":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"1387":{"partial":false,"source":"          matchFailed(\"key\");","missing":[{"startCol":10,"endCol":28}]},"1401":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"1402":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"1413":{"partial":false,"source":"          var result17 = null;","missing":[{"startCol":10,"endCol":30}]},"1415":{"partial":false,"source":"            matchFailed(\"\\\"\\\\\\\"\\\"\");","missing":[{"startCol":12,"endCol":35}]},"1420":{"partial":false,"source":"            var result18 = \"\\\"\";","missing":[{"startCol":12,"endCol":32}]},"1421":{"partial":false,"source":"            pos += 1;","missing":[{"startCol":12,"endCol":21}]},"1425":{"partial":false,"source":"              matchFailed(\"\\\"\\\\\\\"\\\"\");","missing":[{"startCol":14,"endCol":37}]},"1429":{"partial":false,"source":"            var result15 = [result17, result18];","missing":[{"startCol":12,"endCol":48}]},"1435":{"partial":false,"source":"          var result15 = null;","missing":[{"startCol":10,"endCol":30}]},"1436":{"partial":false,"source":"          pos = savedPos5;","missing":[{"startCol":10,"endCol":26}]},"1439":{"partial":false,"source":"          ? (function() { return [\"literal\", \"\"] })()","missing":[{"startCol":12,"endCol":53},{"startCol":26,"endCol":49}]},"1442":{"partial":false,"source":"          var result14 = result16;","missing":[{"startCol":10,"endCol":34}]},"1448":{"partial":false,"source":"          var result0 = result14;","missing":[{"startCol":10,"endCol":33}]},"1456":{"partial":false,"source":"            var result11 = null;","missing":[{"startCol":12,"endCol":32}]},"1458":{"partial":false,"source":"              matchFailed(\"\\\"\\\\\\\"\\\"\");","missing":[{"startCol":14,"endCol":37}]},"1470":{"partial":false,"source":"                  matchFailed(\"\\\"\\\\\\\"\\\"\");","missing":[{"startCol":18,"endCol":41}]},"1484":{"partial":false,"source":"            var result9 = null;","missing":[{"startCol":12,"endCol":31}]},"1485":{"partial":false,"source":"            pos = savedPos3;","missing":[{"startCol":12,"endCol":28}]},"1505":{"partial":false,"source":"              var result4 = null;","missing":[{"startCol":14,"endCol":33}]},"1507":{"partial":false,"source":"                matchFailed(\"\\\"\\\\\\\"\\\"\");","missing":[{"startCol":16,"endCol":39}]},"1519":{"partial":false,"source":"                var result5 = null;","missing":[{"startCol":16,"endCol":35}]},"1526":{"partial":false,"source":"                  var result6 = null;","missing":[{"startCol":18,"endCol":37}]},"1528":{"partial":false,"source":"                    matchFailed(\"\\\"\\\\\\\"\\\"\");","missing":[{"startCol":20,"endCol":43}]},"1534":{"partial":false,"source":"                  var result2 = null;","missing":[{"startCol":18,"endCol":37}]},"1535":{"partial":false,"source":"                  pos = savedPos1;","missing":[{"startCol":18,"endCol":34}]},"1538":{"partial":false,"source":"                var result2 = null;","missing":[{"startCol":16,"endCol":35}]},"1539":{"partial":false,"source":"                pos = savedPos1;","missing":[{"startCol":16,"endCol":32}]},"1542":{"partial":false,"source":"              var result2 = null;","missing":[{"startCol":14,"endCol":33}]},"1543":{"partial":false,"source":"              pos = savedPos1;","missing":[{"startCol":14,"endCol":30}]},"1547":{"partial":false,"source":"              : null;","missing":[{"startCol":16,"endCol":20}]},"1551":{"partial":false,"source":"              var result1 = null;","missing":[{"startCol":14,"endCol":33}]},"1552":{"partial":false,"source":"              pos = savedPos0;","missing":[{"startCol":14,"endCol":30}]},"1557":{"partial":false,"source":"              var result0 = null;;","missing":[{"startCol":14,"endCol":33}]},"1562":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"1563":{"partial":false,"source":"          matchFailed(\"inline\");","missing":[{"startCol":10,"endCol":31}]},"1577":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"1578":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"1584":{"partial":false,"source":"          var result0 = result5;","missing":[{"startCol":10,"endCol":32}]},"1622":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"1623":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"1641":{"partial":false,"source":"            var result15 = null;","missing":[{"startCol":12,"endCol":32}]},"1642":{"partial":false,"source":"            pos = savedPos7;","missing":[{"startCol":12,"endCol":28}]},"1683":{"partial":false,"source":"              var result8 = null;","missing":[{"startCol":14,"endCol":33}]},"1684":{"partial":false,"source":"              pos = savedPos4;","missing":[{"startCol":14,"endCol":30}]},"1695":{"partial":false,"source":"                var result9 = null;","missing":[{"startCol":16,"endCol":35}]},"1696":{"partial":false,"source":"                pos = savedPos3;","missing":[{"startCol":16,"endCol":32}]},"1705":{"partial":false,"source":"                    matchFailed('any character');","missing":[{"startCol":20,"endCol":48}]},"1715":{"partial":false,"source":"                var result5 = null;","missing":[{"startCol":16,"endCol":35}]},"1716":{"partial":false,"source":"                pos = savedPos2;","missing":[{"startCol":16,"endCol":32}]},"1719":{"partial":false,"source":"              var result5 = null;","missing":[{"startCol":14,"endCol":33}]},"1720":{"partial":false,"source":"              pos = savedPos2;","missing":[{"startCol":14,"endCol":30}]},"1783":{"partial":false,"source":"                        matchFailed('any character');","missing":[{"startCol":24,"endCol":52}]},"1877":{"partial":false,"source":"            var result7 = null;","missing":[{"startCol":12,"endCol":31}]},"1878":{"partial":false,"source":"            pos = savedPos3;","missing":[{"startCol":12,"endCol":28}]},"1883":{"partial":false,"source":"              var result8 = result10;","missing":[{"startCol":14,"endCol":37}]},"1891":{"partial":false,"source":"                  matchFailed(\"[^\\\"]\");","missing":[{"startCol":18,"endCol":38}]},"1907":{"partial":false,"source":"            var result4 = null;","missing":[{"startCol":12,"endCol":31}]},"1908":{"partial":false,"source":"            pos = savedPos2;","missing":[{"startCol":12,"endCol":28}]},"1949":{"partial":false,"source":"                var result7 = null;","missing":[{"startCol":16,"endCol":35}]},"1950":{"partial":false,"source":"                pos = savedPos3;","missing":[{"startCol":16,"endCol":32}]},"1955":{"partial":false,"source":"                  var result8 = result10;","missing":[{"startCol":18,"endCol":41}]},"1963":{"partial":false,"source":"                      matchFailed(\"[^\\\"]\");","missing":[{"startCol":22,"endCol":42}]},"1979":{"partial":false,"source":"                var result4 = null;","missing":[{"startCol":16,"endCol":35}]},"1980":{"partial":false,"source":"                pos = savedPos2;","missing":[{"startCol":16,"endCol":32}]},"2009":{"partial":true,"source":"        if (reportMatchFailures && result0 === null) {","missing":[{"startCol":35,"endCol":51}]},"2010":{"partial":false,"source":"          matchFailed(\"literal\");","missing":[{"startCol":10,"endCol":32}]},"2031":{"partial":false,"source":"          var result1 = \"\\\\\\\"\";","missing":[{"startCol":10,"endCol":31}]},"2032":{"partial":false,"source":"          pos += 2;","missing":[{"startCol":10,"endCol":19}]},"2036":{"partial":false,"source":"            matchFailed(\"\\\"\\\\\\\\\\\\\\\"\\\"\");","missing":[{"startCol":12,"endCol":39}]},"2040":{"partial":false,"source":"          ? (function() { return '\"' })()","missing":[{"startCol":12,"endCol":41},{"startCol":26,"endCol":37}]},"2043":{"partial":false,"source":"          var result0 = result2;","missing":[{"startCol":10,"endCol":32}]},"2076":{"partial":false,"source":"            matchFailed(\"\\\"{!\\\"\");","missing":[{"startCol":12,"endCol":33}]},"2087":{"partial":false,"source":"            var result11 = \"!}\";","missing":[{"startCol":12,"endCol":32}]},"2088":{"partial":false,"source":"            pos += 2;","missing":[{"startCol":12,"endCol":21}]},"2092":{"partial":false,"source":"              matchFailed(\"\\\"!}\\\"\");","missing":[{"startCol":14,"endCol":35}]},"2099":{"partial":false,"source":"            var result9 = null;","missing":[{"startCol":12,"endCol":31}]},"2100":{"partial":false,"source":"            pos = savedPos4;","missing":[{"startCol":12,"endCol":28}]},"2107":{"partial":false,"source":"              var result10 = null;","missing":[{"startCol":14,"endCol":34}]},"2109":{"partial":false,"source":"                matchFailed('any character');","missing":[{"startCol":16,"endCol":44}]},"2115":{"partial":false,"source":"              var result7 = null;","missing":[{"startCol":14,"endCol":33}]},"2116":{"partial":false,"source":"              pos = savedPos3;","missing":[{"startCol":14,"endCol":30}]},"2119":{"partial":false,"source":"            var result7 = null;","missing":[{"startCol":12,"endCol":31}]},"2120":{"partial":false,"source":"            pos = savedPos3;","missing":[{"startCol":12,"endCol":28}]},"2124":{"partial":false,"source":"            : null;","missing":[{"startCol":14,"endCol":18}]},"2128":{"partial":false,"source":"            var result6 = null;","missing":[{"startCol":12,"endCol":31}]},"2129":{"partial":false,"source":"            pos = savedPos2;","missing":[{"startCol":12,"endCol":28}]},"2144":{"partial":false,"source":"                matchFailed(\"\\\"!}\\\"\");","missing":[{"startCol":16,"endCol":37}]},"2159":{"partial":false,"source":"                var result10 = null;","missing":[{"startCol":16,"endCol":36}]},"2161":{"partial":false,"source":"                  matchFailed('any character');","missing":[{"startCol":18,"endCol":46}]},"2167":{"partial":false,"source":"                var result7 = null;","missing":[{"startCol":16,"endCol":35}]},"2168":{"partial":false,"source":"                pos = savedPos3;","missing":[{"startCol":16,"endCol":32}]},"2189":{"partial":false,"source":"              var result5 = null;","missing":[{"startCol":14,"endCol":33}]},"2191":{"partial":false,"source":"                matchFailed(\"\\\"!}\\\"\");","missing":[{"startCol":16,"endCol":37}]},"2197":{"partial":false,"source":"              var result1 = null;","missing":[{"startCol":14,"endCol":33}]},"2198":{"partial":false,"source":"              pos = savedPos1;","missing":[{"startCol":14,"endCol":30}]},"2201":{"partial":false,"source":"            var result1 = null;","missing":[{"startCol":12,"endCol":31}]},"2202":{"partial":false,"source":"            pos = savedPos1;","missing":[{"startCol":12,"endCol":28}]},"2247":{"partial":false,"source":"              matchFailed(\"[#?^><+%:@\\\\/~%]\");","missing":[{"startCol":14,"endCol":45}]},"2260":{"partial":false,"source":"              var result8 = null;","missing":[{"startCol":14,"endCol":33}]},"2261":{"partial":false,"source":"              pos = savedPos3;","missing":[{"startCol":14,"endCol":30}]},"2272":{"partial":false,"source":"                var result9 = null;","missing":[{"startCol":16,"endCol":35}]},"2273":{"partial":false,"source":"                pos = savedPos2;","missing":[{"startCol":16,"endCol":32}]},"2280":{"partial":false,"source":"                  var result10 = null;","missing":[{"startCol":18,"endCol":38}]},"2282":{"partial":false,"source":"                    matchFailed('any character');","missing":[{"startCol":20,"endCol":48}]},"2288":{"partial":false,"source":"                  var result7 = null;","missing":[{"startCol":18,"endCol":37}]},"2289":{"partial":false,"source":"                  pos = savedPos1;","missing":[{"startCol":18,"endCol":34}]},"2292":{"partial":false,"source":"                var result7 = null;","missing":[{"startCol":16,"endCol":35}]},"2293":{"partial":false,"source":"                pos = savedPos1;","missing":[{"startCol":16,"endCol":32}]},"2296":{"partial":false,"source":"              var result7 = null;","missing":[{"startCol":14,"endCol":33}]},"2297":{"partial":false,"source":"              pos = savedPos1;","missing":[{"startCol":14,"endCol":30}]},"2324":{"partial":false,"source":"                    var result9 = null;","missing":[{"startCol":20,"endCol":39}]},"2325":{"partial":false,"source":"                    pos = savedPos2;","missing":[{"startCol":20,"endCol":36}]},"2332":{"partial":false,"source":"                      var result10 = null;","missing":[{"startCol":22,"endCol":42}]},"2334":{"partial":false,"source":"                        matchFailed('any character');","missing":[{"startCol":24,"endCol":52}]},"2340":{"partial":false,"source":"                      var result7 = null;","missing":[{"startCol":22,"endCol":41}]},"2341":{"partial":false,"source":"                      pos = savedPos1;","missing":[{"startCol":22,"endCol":38}]},"2344":{"partial":false,"source":"                    var result7 = null;","missing":[{"startCol":20,"endCol":39}]},"2345":{"partial":false,"source":"                    pos = savedPos1;","missing":[{"startCol":20,"endCol":36}]},"2353":{"partial":false,"source":"              var result5 = null;","missing":[{"startCol":14,"endCol":33}]},"2360":{"partial":false,"source":"                var result2 = null;","missing":[{"startCol":16,"endCol":35}]},"2361":{"partial":false,"source":"                pos = savedPos0;","missing":[{"startCol":16,"endCol":32}]},"2364":{"partial":false,"source":"              var result2 = null;","missing":[{"startCol":14,"endCol":33}]},"2365":{"partial":false,"source":"              pos = savedPos0;","missing":[{"startCol":14,"endCol":30}]},"2410":{"partial":false,"source":"            matchFailed(\"\\\"{\\\"\");","missing":[{"startCol":12,"endCol":32}]},"2438":{"partial":false,"source":"            matchFailed(\"\\\"}\\\"\");","missing":[{"startCol":12,"endCol":32}]},"2466":{"partial":false,"source":"            matchFailed(\"\\\"\\\\n\\\"\");","missing":[{"startCol":12,"endCol":34}]},"2473":{"partial":false,"source":"            var result4 = \"\\r\\n\";","missing":[{"startCol":12,"endCol":33}]},"2474":{"partial":false,"source":"            pos += 2;","missing":[{"startCol":12,"endCol":21}]},"2478":{"partial":false,"source":"              matchFailed(\"\\\"\\\\r\\\\n\\\"\");","missing":[{"startCol":14,"endCol":39}]},"2482":{"partial":false,"source":"            var result0 = result4;","missing":[{"startCol":12,"endCol":34}]},"2485":{"partial":false,"source":"              var result3 = \"\\r\";","missing":[{"startCol":14,"endCol":33}]},"2486":{"partial":false,"source":"              pos += 1;","missing":[{"startCol":14,"endCol":23}]},"2490":{"partial":false,"source":"                matchFailed(\"\\\"\\\\r\\\"\");","missing":[{"startCol":16,"endCol":38}]},"2494":{"partial":false,"source":"              var result0 = result3;","missing":[{"startCol":14,"endCol":36}]},"2497":{"partial":false,"source":"                var result2 = \"\\u2028\";","missing":[{"startCol":16,"endCol":39}]},"2498":{"partial":false,"source":"                pos += 1;","missing":[{"startCol":16,"endCol":25}]},"2502":{"partial":false,"source":"                  matchFailed(\"\\\"\\\\u2028\\\"\");","missing":[{"startCol":18,"endCol":44}]},"2506":{"partial":false,"source":"                var result0 = result2;","missing":[{"startCol":16,"endCol":38}]},"2509":{"partial":false,"source":"                  var result1 = \"\\u2029\";","missing":[{"startCol":18,"endCol":41}]},"2510":{"partial":false,"source":"                  pos += 1;","missing":[{"startCol":18,"endCol":27}]},"2514":{"partial":false,"source":"                    matchFailed(\"\\\"\\\\u2029\\\"\");","missing":[{"startCol":20,"endCol":46}]},"2518":{"partial":false,"source":"                  var result0 = result1;","missing":[{"startCol":18,"endCol":40}]},"2540":{"partial":false,"source":"          pos = cachedResult.nextPos;","missing":[{"startCol":10,"endCol":37}]},"2541":{"partial":false,"source":"          return cachedResult.result;","missing":[{"startCol":10,"endCol":37}]},"2551":{"partial":false,"source":"            matchFailed(\"[\t\u000b\f \\\\xA0\\\\uFEFF]\");","missing":[{"startCol":12,"endCol":45}]},"2579":{"partial":false,"source":"              return 'end of input';","missing":[{"startCol":14,"endCol":36}]},"2581":{"partial":false,"source":"              return failuresExpectedUnique[0];","missing":[{"startCol":14,"endCol":47}]},"2593":{"partial":false,"source":"          : 'end of input';","missing":[{"startCol":12,"endCol":26}]},"2613":{"partial":false,"source":"            if (!seenCR) { line++; }","missing":[{"startCol":27,"endCol":33}]},"2614":{"partial":false,"source":"            column = 1;","missing":[{"startCol":12,"endCol":23}]},"2615":{"partial":false,"source":"            seenCR = false;","missing":[{"startCol":12,"endCol":27}]},"2617":{"partial":false,"source":"            line++;","missing":[{"startCol":12,"endCol":18}]},"2618":{"partial":false,"source":"            column = 1;","missing":[{"startCol":12,"endCol":23}]},"2619":{"partial":false,"source":"            seenCR = true;","missing":[{"startCol":12,"endCol":26}]},"2680":{"partial":false,"source":"    toSource: function() { return this._source; }","missing":[{"startCol":27,"endCol":47}]},"2699":{"partial":true,"source":"})(typeof exports !== 'undefined' ? exports : window.dust);","missing":[{"startCol":46,"endCol":57}]}},"source":"(function(dust){\n\nvar parser = (function(){\n  /* Generated by PEG.js 0.6.2 (http://pegjs.majda.cz/). */\n  \n  var result = {\n    /*\n     * Parses the input with a generated parser. If the parsing is successfull,\n     * returns a value explicitly or implicitly specified by the grammar from\n     * which the parser was generated (see |PEG.buildParser|). If the parsing is\n     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.\n     */\n    parse: function(input, startRule) {\n      var parseFunctions = {\n        \"bodies\": parse_bodies,\n        \"body\": parse_body,\n        \"buffer\": parse_buffer,\n        \"comment\": parse_comment,\n        \"context\": parse_context,\n        \"end_tag\": parse_end_tag,\n        \"eol\": parse_eol,\n        \"esc\": parse_esc,\n        \"filters\": parse_filters,\n        \"identifier\": parse_identifier,\n        \"inline\": parse_inline,\n        \"inline_part\": parse_inline_part,\n        \"key\": parse_key,\n        \"ld\": parse_ld,\n        \"literal\": parse_literal,\n        \"params\": parse_params,\n        \"part\": parse_part,\n        \"partial\": parse_partial,\n        \"path\": parse_path,\n        \"rd\": parse_rd,\n        \"reference\": parse_reference,\n        \"sec_tag_start\": parse_sec_tag_start,\n        \"section\": parse_section,\n        \"special\": parse_special,\n        \"tag\": parse_tag,\n        \"ws\": parse_ws\n      };\n      \n      if (startRule !== undefined) {\n        if (parseFunctions[startRule] === undefined) {\n          throw new Error(\"Invalid rule name: \" + quote(startRule) + \".\");\n        }\n      } else {\n        startRule = \"body\";\n      }\n      \n      var pos = 0;\n      var reportMatchFailures = true;\n      var rightmostMatchFailuresPos = 0;\n      var rightmostMatchFailuresExpected = [];\n      var cache = {};\n      \n      function padLeft(input, padding, length) {\n        var result = input;\n        \n        var padLength = length - input.length;\n        for (var i = 0; i < padLength; i++) {\n          result = padding + result;\n        }\n        \n        return result;\n      }\n      \n      function escape(ch) {\n        var charCode = ch.charCodeAt(0);\n        \n        if (charCode <= 0xFF) {\n          var escapeChar = 'x';\n          var length = 2;\n        } else {\n          var escapeChar = 'u';\n          var length = 4;\n        }\n        \n        return '\\\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);\n      }\n      \n      function quote(s) {\n        /*\n         * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a\n         * string literal except for the closing quote character, backslash,\n         * carriage return, line separator, paragraph separator, and line feed.\n         * Any character may appear in the form of an escape sequence.\n         */\n        return '\"' + s\n          .replace(/\\\\/g, '\\\\\\\\')            // backslash\n          .replace(/\"/g, '\\\\\"')              // closing quote character\n          .replace(/\\r/g, '\\\\r')             // carriage return\n          .replace(/\\n/g, '\\\\n')             // line feed\n          .replace(/[\\x80-\\uFFFF]/g, escape) // non-ASCII characters\n          + '\"';\n      }\n      \n      function matchFailed(failure) {\n        if (pos < rightmostMatchFailuresPos) {\n          return;\n        }\n        \n        if (pos > rightmostMatchFailuresPos) {\n          rightmostMatchFailuresPos = pos;\n          rightmostMatchFailuresExpected = [];\n        }\n        \n        rightmostMatchFailuresExpected.push(failure);\n      }\n      \n      function parse_body() {\n        var cacheKey = 'body@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        var result1 = [];\n        var result3 = parse_part();\n        while (result3 !== null) {\n          result1.push(result3);\n          var result3 = parse_part();\n        }\n        var result2 = result1 !== null\n          ? (function(p) { return [\"body\"].concat(p) })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_part() {\n        var cacheKey = 'part@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var result6 = parse_comment();\n        if (result6 !== null) {\n          var result0 = result6;\n        } else {\n          var result5 = parse_section();\n          if (result5 !== null) {\n            var result0 = result5;\n          } else {\n            var result4 = parse_partial();\n            if (result4 !== null) {\n              var result0 = result4;\n            } else {\n              var result3 = parse_special();\n              if (result3 !== null) {\n                var result0 = result3;\n              } else {\n                var result2 = parse_reference();\n                if (result2 !== null) {\n                  var result0 = result2;\n                } else {\n                  var result1 = parse_buffer();\n                  if (result1 !== null) {\n                    var result0 = result1;\n                  } else {\n                    var result0 = null;;\n                  };\n                };\n              };\n            };\n          };\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_section() {\n        var cacheKey = 'section@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos2 = pos;\n        var savedPos3 = pos;\n        var result10 = parse_sec_tag_start();\n        if (result10 !== null) {\n          var result11 = parse_rd();\n          if (result11 !== null) {\n            var result12 = parse_body();\n            if (result12 !== null) {\n              var result13 = parse_bodies();\n              if (result13 !== null) {\n                var result14 = parse_end_tag();\n                if (result14 !== null) {\n                  var result15 = (function() {if (!result8) return true; return result8[1].text === result12.text})() ? '' : null;\n                  if (result15 !== null) {\n                    var result8 = [result10, result11, result12, result13, result14, result15];\n                  } else {\n                    var result8 = null;\n                    pos = savedPos3;\n                  }\n                } else {\n                  var result8 = null;\n                  pos = savedPos3;\n                }\n              } else {\n                var result8 = null;\n                pos = savedPos3;\n              }\n            } else {\n              var result8 = null;\n              pos = savedPos3;\n            }\n          } else {\n            var result8 = null;\n            pos = savedPos3;\n          }\n        } else {\n          var result8 = null;\n          pos = savedPos3;\n        }\n        var result9 = result8 !== null\n          ? (function(t, b, e, n) { e.push([\"param\", [\"literal\", \"block\"], b]); t.push(e); return t })(result8[0], result8[2], result8[3], result8[4])\n          : null;\n        if (result9 !== null) {\n          var result7 = result9;\n        } else {\n          var result7 = null;\n          pos = savedPos2;\n        }\n        if (result7 !== null) {\n          var result0 = result7;\n        } else {\n          var savedPos0 = pos;\n          var savedPos1 = pos;\n          var result4 = parse_sec_tag_start();\n          if (result4 !== null) {\n            if (input.substr(pos, 1) === \"/\") {\n              var result5 = \"/\";\n              pos += 1;\n            } else {\n              var result5 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"/\\\"\");\n              }\n            }\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result2 = [result4, result5, result6];\n              } else {\n                var result2 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result2 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result2 = null;\n            pos = savedPos1;\n          }\n          var result3 = result2 !== null\n            ? (function(t) { t.push([\"bodies\"]); return t })(result2[0])\n            : null;\n          if (result3 !== null) {\n            var result1 = result3;\n          } else {\n            var result1 = null;\n            pos = savedPos0;\n          }\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"section\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_sec_tag_start() {\n        var cacheKey = 'sec_tag_start@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos).match(/^[#?^<+@%]/) !== null) {\n            var result4 = input.charAt(pos);\n            pos++;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"[#?^<+@%]\");\n            }\n          }\n          if (result4 !== null) {\n            var result5 = parse_identifier();\n            if (result5 !== null) {\n              var result6 = parse_context();\n              if (result6 !== null) {\n                var result7 = parse_params();\n                if (result7 !== null) {\n                  var result1 = [result3, result4, result5, result6, result7];\n                } else {\n                  var result1 = null;\n                  pos = savedPos1;\n                }\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(t, n, c, p) { return [t, n, c, p] })(result1[1], result1[2], result1[3], result1[4])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_end_tag() {\n        var cacheKey = 'end_tag@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos, 1) === \"/\") {\n            var result4 = \"/\";\n            pos += 1;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"/\\\"\");\n            }\n          }\n          if (result4 !== null) {\n            var result5 = parse_identifier();\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result1 = [result3, result4, result5, result6];\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(n) { return n })(result1[2])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"end tag\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_context() {\n        var cacheKey = 'context@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        if (input.substr(pos, 1) === \":\") {\n          var result6 = \":\";\n          pos += 1;\n        } else {\n          var result6 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\":\\\"\");\n          }\n        }\n        if (result6 !== null) {\n          var result7 = parse_identifier();\n          if (result7 !== null) {\n            var result4 = [result6, result7];\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(n) {return n})(result4[1])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        var result1 = result3 !== null ? result3 : '';\n        var result2 = result1 !== null\n          ? (function(n) { return n ? [\"context\", n] : [\"context\"] })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_params() {\n        var cacheKey = 'params@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var result1 = [];\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        var result6 = parse_ws();\n        if (result6 !== null) {\n          var result7 = parse_key();\n          if (result7 !== null) {\n            if (input.substr(pos, 1) === \"=\") {\n              var result8 = \"=\";\n              pos += 1;\n            } else {\n              var result8 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"=\\\"\");\n              }\n            }\n            if (result8 !== null) {\n              var result11 = parse_identifier();\n              if (result11 !== null) {\n                var result9 = result11;\n              } else {\n                var result10 = parse_inline();\n                if (result10 !== null) {\n                  var result9 = result10;\n                } else {\n                  var result9 = null;;\n                };\n              }\n              if (result9 !== null) {\n                var result4 = [result6, result7, result8, result9];\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[1], result4[3])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        while (result3 !== null) {\n          result1.push(result3);\n          var savedPos1 = pos;\n          var savedPos2 = pos;\n          var result6 = parse_ws();\n          if (result6 !== null) {\n            var result7 = parse_key();\n            if (result7 !== null) {\n              if (input.substr(pos, 1) === \"=\") {\n                var result8 = \"=\";\n                pos += 1;\n              } else {\n                var result8 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"\\\"=\\\"\");\n                }\n              }\n              if (result8 !== null) {\n                var result11 = parse_identifier();\n                if (result11 !== null) {\n                  var result9 = result11;\n                } else {\n                  var result10 = parse_inline();\n                  if (result10 !== null) {\n                    var result9 = result10;\n                  } else {\n                    var result9 = null;;\n                  };\n                }\n                if (result9 !== null) {\n                  var result4 = [result6, result7, result8, result9];\n                } else {\n                  var result4 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n          var result5 = result4 !== null\n            ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[1], result4[3])\n            : null;\n          if (result5 !== null) {\n            var result3 = result5;\n          } else {\n            var result3 = null;\n            pos = savedPos1;\n          }\n        }\n        var result2 = result1 !== null\n          ? (function(p) { return [\"params\"].concat(p) })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"params\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_bodies() {\n        var cacheKey = 'bodies@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var result1 = [];\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        var result6 = parse_ld();\n        if (result6 !== null) {\n          if (input.substr(pos, 1) === \":\") {\n            var result7 = \":\";\n            pos += 1;\n          } else {\n            var result7 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\":\\\"\");\n            }\n          }\n          if (result7 !== null) {\n            var result8 = parse_key();\n            if (result8 !== null) {\n              var result9 = parse_rd();\n              if (result9 !== null) {\n                var result10 = parse_body();\n                if (result10 !== null) {\n                  var result4 = [result6, result7, result8, result9, result10];\n                } else {\n                  var result4 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[2], result4[4])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        while (result3 !== null) {\n          result1.push(result3);\n          var savedPos1 = pos;\n          var savedPos2 = pos;\n          var result6 = parse_ld();\n          if (result6 !== null) {\n            if (input.substr(pos, 1) === \":\") {\n              var result7 = \":\";\n              pos += 1;\n            } else {\n              var result7 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\":\\\"\");\n              }\n            }\n            if (result7 !== null) {\n              var result8 = parse_key();\n              if (result8 !== null) {\n                var result9 = parse_rd();\n                if (result9 !== null) {\n                  var result10 = parse_body();\n                  if (result10 !== null) {\n                    var result4 = [result6, result7, result8, result9, result10];\n                  } else {\n                    var result4 = null;\n                    pos = savedPos2;\n                  }\n                } else {\n                  var result4 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n          var result5 = result4 !== null\n            ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[2], result4[4])\n            : null;\n          if (result5 !== null) {\n            var result3 = result5;\n          } else {\n            var result3 = null;\n            pos = savedPos1;\n          }\n        }\n        var result2 = result1 !== null\n          ? (function(p) { return [\"bodies\"].concat(p) })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"bodies\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_reference() {\n        var cacheKey = 'reference@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          var result4 = parse_identifier();\n          if (result4 !== null) {\n            var result5 = parse_filters();\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result1 = [result3, result4, result5, result6];\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(n, f) { return [\"reference\", n, f] })(result1[1], result1[2])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"reference\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_partial() {\n        var cacheKey = 'partial@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos, 1) === \">\") {\n            var result4 = \">\";\n            pos += 1;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\">\\\"\");\n            }\n          }\n          if (result4 !== null) {\n            var savedPos2 = pos;\n            var result11 = parse_key();\n            var result12 = result11 !== null\n              ? (function(k) {return [\"literal\", k]})(result11)\n              : null;\n            if (result12 !== null) {\n              var result10 = result12;\n            } else {\n              var result10 = null;\n              pos = savedPos2;\n            }\n            if (result10 !== null) {\n              var result5 = result10;\n            } else {\n              var result9 = parse_inline();\n              if (result9 !== null) {\n                var result5 = result9;\n              } else {\n                var result5 = null;;\n              };\n            }\n            if (result5 !== null) {\n              var result6 = parse_context();\n              if (result6 !== null) {\n                if (input.substr(pos, 1) === \"/\") {\n                  var result7 = \"/\";\n                  pos += 1;\n                } else {\n                  var result7 = null;\n                  if (reportMatchFailures) {\n                    matchFailed(\"\\\"/\\\"\");\n                  }\n                }\n                if (result7 !== null) {\n                  var result8 = parse_rd();\n                  if (result8 !== null) {\n                    var result1 = [result3, result4, result5, result6, result7, result8];\n                  } else {\n                    var result1 = null;\n                    pos = savedPos1;\n                  }\n                } else {\n                  var result1 = null;\n                  pos = savedPos1;\n                }\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(n, c) { return [\"partial\", n, c] })(result1[2], result1[3])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"partial\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_filters() {\n        var cacheKey = 'filters@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var result1 = [];\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        if (input.substr(pos, 1) === \"|\") {\n          var result6 = \"|\";\n          pos += 1;\n        } else {\n          var result6 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"|\\\"\");\n          }\n        }\n        if (result6 !== null) {\n          var result7 = parse_key();\n          if (result7 !== null) {\n            var result4 = [result6, result7];\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(n) {return n})(result4[1])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        while (result3 !== null) {\n          result1.push(result3);\n          var savedPos1 = pos;\n          var savedPos2 = pos;\n          if (input.substr(pos, 1) === \"|\") {\n            var result6 = \"|\";\n            pos += 1;\n          } else {\n            var result6 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"|\\\"\");\n            }\n          }\n          if (result6 !== null) {\n            var result7 = parse_key();\n            if (result7 !== null) {\n              var result4 = [result6, result7];\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n          var result5 = result4 !== null\n            ? (function(n) {return n})(result4[1])\n            : null;\n          if (result5 !== null) {\n            var result3 = result5;\n          } else {\n            var result3 = null;\n            pos = savedPos1;\n          }\n        }\n        var result2 = result1 !== null\n          ? (function(f) { return [\"filters\"].concat(f) })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"filters\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_special() {\n        var cacheKey = 'special@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos, 1) === \"~\") {\n            var result4 = \"~\";\n            pos += 1;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"~\\\"\");\n            }\n          }\n          if (result4 !== null) {\n            var result5 = parse_key();\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result1 = [result3, result4, result5, result6];\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(k) { return [\"special\", k] })(result1[2])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"special\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_identifier() {\n        var cacheKey = 'identifier@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos1 = pos;\n        var result5 = parse_path();\n        var result6 = result5 !== null\n          ? (function(p) { return wrap([\"path\"].concat(p), cacheKey) })(result5)\n          : null;\n        if (result6 !== null) {\n          var result4 = result6;\n        } else {\n          var result4 = null;\n          pos = savedPos1;\n        }\n        if (result4 !== null) {\n          var result0 = result4;\n        } else {\n          var savedPos0 = pos;\n          var result2 = parse_key();\n          var result3 = result2 !== null\n            ? (function(k) { return wrap([\"key\", k], cacheKey) })(result2)\n            : null;\n          if (result3 !== null) {\n            var result1 = result3;\n          } else {\n            var result1 = null;\n            pos = savedPos0;\n          }\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"identifier\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_path() {\n        var cacheKey = 'path@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        var result14 = parse_key();\n        var result7 = result14 !== null ? result14 : '';\n        if (result7 !== null) {\n          var savedPos3 = pos;\n          var savedPos4 = pos;\n          if (input.substr(pos, 1) === \".\") {\n            var result12 = \".\";\n            pos += 1;\n          } else {\n            var result12 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\".\\\"\");\n            }\n          }\n          if (result12 !== null) {\n            var result13 = parse_key();\n            if (result13 !== null) {\n              var result10 = [result12, result13];\n            } else {\n              var result10 = null;\n              pos = savedPos4;\n            }\n          } else {\n            var result10 = null;\n            pos = savedPos4;\n          }\n          var result11 = result10 !== null\n            ? (function(k) {return k})(result10[1])\n            : null;\n          if (result11 !== null) {\n            var result9 = result11;\n          } else {\n            var result9 = null;\n            pos = savedPos3;\n          }\n          if (result9 !== null) {\n            var result8 = [];\n            while (result9 !== null) {\n              result8.push(result9);\n              var savedPos3 = pos;\n              var savedPos4 = pos;\n              if (input.substr(pos, 1) === \".\") {\n                var result12 = \".\";\n                pos += 1;\n              } else {\n                var result12 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"\\\".\\\"\");\n                }\n              }\n              if (result12 !== null) {\n                var result13 = parse_key();\n                if (result13 !== null) {\n                  var result10 = [result12, result13];\n                } else {\n                  var result10 = null;\n                  pos = savedPos4;\n                }\n              } else {\n                var result10 = null;\n                pos = savedPos4;\n              }\n              var result11 = result10 !== null\n                ? (function(k) {return k})(result10[1])\n                : null;\n              if (result11 !== null) {\n                var result9 = result11;\n              } else {\n                var result9 = null;\n                pos = savedPos3;\n              }\n            }\n          } else {\n            var result8 = null;\n          }\n          if (result8 !== null) {\n            var result5 = [result7, result8];\n          } else {\n            var result5 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result5 = null;\n          pos = savedPos2;\n        }\n        var result6 = result5 !== null\n          ? (function(k, d) {\n              if (k) { d.unshift(k); return [false, d]; }\n              return [true, d];\n            })(result5[0], result5[1])\n          : null;\n        if (result6 !== null) {\n          var result4 = result6;\n        } else {\n          var result4 = null;\n          pos = savedPos1;\n        }\n        if (result4 !== null) {\n          var result0 = result4;\n        } else {\n          var savedPos0 = pos;\n          if (input.substr(pos, 1) === \".\") {\n            var result2 = \".\";\n            pos += 1;\n          } else {\n            var result2 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\".\\\"\");\n            }\n          }\n          var result3 = result2 !== null\n            ? (function() { return [true, []] })()\n            : null;\n          if (result3 !== null) {\n            var result1 = result3;\n          } else {\n            var result1 = null;\n            pos = savedPos0;\n          }\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"path\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_key() {\n        var cacheKey = 'key@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        if (input.substr(pos).match(/^[a-zA-Z_$]/) !== null) {\n          var result3 = input.charAt(pos);\n          pos++;\n        } else {\n          var result3 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"[a-zA-Z_$]\");\n          }\n        }\n        if (result3 !== null) {\n          var result4 = [];\n          if (input.substr(pos).match(/^[0-9a-zA-Z_$]/) !== null) {\n            var result5 = input.charAt(pos);\n            pos++;\n          } else {\n            var result5 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"[0-9a-zA-Z_$]\");\n            }\n          }\n          while (result5 !== null) {\n            result4.push(result5);\n            if (input.substr(pos).match(/^[0-9a-zA-Z_$]/) !== null) {\n              var result5 = input.charAt(pos);\n              pos++;\n            } else {\n              var result5 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"[0-9a-zA-Z_$]\");\n              }\n            }\n          }\n          if (result4 !== null) {\n            var result1 = [result3, result4];\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(h, t) { return h + t.join('') })(result1[0], result1[1])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"key\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_inline() {\n        var cacheKey = 'inline@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos4 = pos;\n        var savedPos5 = pos;\n        if (input.substr(pos, 1) === \"\\\"\") {\n          var result17 = \"\\\"\";\n          pos += 1;\n        } else {\n          var result17 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"\\\\\\\"\\\"\");\n          }\n        }\n        if (result17 !== null) {\n          if (input.substr(pos, 1) === \"\\\"\") {\n            var result18 = \"\\\"\";\n            pos += 1;\n          } else {\n            var result18 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"\\\\\\\"\\\"\");\n            }\n          }\n          if (result18 !== null) {\n            var result15 = [result17, result18];\n          } else {\n            var result15 = null;\n            pos = savedPos5;\n          }\n        } else {\n          var result15 = null;\n          pos = savedPos5;\n        }\n        var result16 = result15 !== null\n          ? (function() { return [\"literal\", \"\"] })()\n          : null;\n        if (result16 !== null) {\n          var result14 = result16;\n        } else {\n          var result14 = null;\n          pos = savedPos4;\n        }\n        if (result14 !== null) {\n          var result0 = result14;\n        } else {\n          var savedPos2 = pos;\n          var savedPos3 = pos;\n          if (input.substr(pos, 1) === \"\\\"\") {\n            var result11 = \"\\\"\";\n            pos += 1;\n          } else {\n            var result11 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"\\\\\\\"\\\"\");\n            }\n          }\n          if (result11 !== null) {\n            var result12 = parse_literal();\n            if (result12 !== null) {\n              if (input.substr(pos, 1) === \"\\\"\") {\n                var result13 = \"\\\"\";\n                pos += 1;\n              } else {\n                var result13 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"\\\"\\\\\\\"\\\"\");\n                }\n              }\n              if (result13 !== null) {\n                var result9 = [result11, result12, result13];\n              } else {\n                var result9 = null;\n                pos = savedPos3;\n              }\n            } else {\n              var result9 = null;\n              pos = savedPos3;\n            }\n          } else {\n            var result9 = null;\n            pos = savedPos3;\n          }\n          var result10 = result9 !== null\n            ? (function(l) { return [\"literal\", l] })(result9[1])\n            : null;\n          if (result10 !== null) {\n            var result8 = result10;\n          } else {\n            var result8 = null;\n            pos = savedPos2;\n          }\n          if (result8 !== null) {\n            var result0 = result8;\n          } else {\n            var savedPos0 = pos;\n            var savedPos1 = pos;\n            if (input.substr(pos, 1) === \"\\\"\") {\n              var result4 = \"\\\"\";\n              pos += 1;\n            } else {\n              var result4 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"\\\\\\\"\\\"\");\n              }\n            }\n            if (result4 !== null) {\n              var result7 = parse_inline_part();\n              if (result7 !== null) {\n                var result5 = [];\n                while (result7 !== null) {\n                  result5.push(result7);\n                  var result7 = parse_inline_part();\n                }\n              } else {\n                var result5 = null;\n              }\n              if (result5 !== null) {\n                if (input.substr(pos, 1) === \"\\\"\") {\n                  var result6 = \"\\\"\";\n                  pos += 1;\n                } else {\n                  var result6 = null;\n                  if (reportMatchFailures) {\n                    matchFailed(\"\\\"\\\\\\\"\\\"\");\n                  }\n                }\n                if (result6 !== null) {\n                  var result2 = [result4, result5, result6];\n                } else {\n                  var result2 = null;\n                  pos = savedPos1;\n                }\n              } else {\n                var result2 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result2 = null;\n              pos = savedPos1;\n            }\n            var result3 = result2 !== null\n              ? (function(p) { return [\"body\"].concat(p) })(result2[1])\n              : null;\n            if (result3 !== null) {\n              var result1 = result3;\n            } else {\n              var result1 = null;\n              pos = savedPos0;\n            }\n            if (result1 !== null) {\n              var result0 = result1;\n            } else {\n              var result0 = null;;\n            };\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"inline\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_inline_part() {\n        var cacheKey = 'inline_part@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var result5 = parse_special();\n        if (result5 !== null) {\n          var result0 = result5;\n        } else {\n          var result4 = parse_reference();\n          if (result4 !== null) {\n            var result0 = result4;\n          } else {\n            var savedPos0 = pos;\n            var result2 = parse_literal();\n            var result3 = result2 !== null\n              ? (function(l) { return [\"buffer\", l] })(result2)\n              : null;\n            if (result3 !== null) {\n              var result1 = result3;\n            } else {\n              var result1 = null;\n              pos = savedPos0;\n            }\n            if (result1 !== null) {\n              var result0 = result1;\n            } else {\n              var result0 = null;;\n            };\n          };\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_buffer() {\n        var cacheKey = 'buffer@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos6 = pos;\n        var savedPos7 = pos;\n        var result17 = parse_eol();\n        if (result17 !== null) {\n          var result18 = [];\n          var result19 = parse_ws();\n          while (result19 !== null) {\n            result18.push(result19);\n            var result19 = parse_ws();\n          }\n          if (result18 !== null) {\n            var result15 = [result17, result18];\n          } else {\n            var result15 = null;\n            pos = savedPos7;\n          }\n        } else {\n          var result15 = null;\n          pos = savedPos7;\n        }\n        var result16 = result15 !== null\n          ? (function(e, w) { return [\"format\", e, w.join('')] })(result15[0], result15[1])\n          : null;\n        if (result16 !== null) {\n          var result14 = result16;\n        } else {\n          var result14 = null;\n          pos = savedPos6;\n        }\n        if (result14 !== null) {\n          var result0 = result14;\n        } else {\n          var savedPos0 = pos;\n          var savedPos1 = pos;\n          var savedPos2 = pos;\n          var savedPos5 = pos;\n          var savedReportMatchFailuresVar2 = reportMatchFailures;\n          reportMatchFailures = false;\n          var result13 = parse_tag();\n          reportMatchFailures = savedReportMatchFailuresVar2;\n          if (result13 === null) {\n            var result7 = '';\n          } else {\n            var result7 = null;\n            pos = savedPos5;\n          }\n          if (result7 !== null) {\n            var savedPos4 = pos;\n            var savedReportMatchFailuresVar1 = reportMatchFailures;\n            reportMatchFailures = false;\n            var result12 = parse_eol();\n            reportMatchFailures = savedReportMatchFailuresVar1;\n            if (result12 === null) {\n              var result8 = '';\n            } else {\n              var result8 = null;\n              pos = savedPos4;\n            }\n            if (result8 !== null) {\n              var savedPos3 = pos;\n              var savedReportMatchFailuresVar0 = reportMatchFailures;\n              reportMatchFailures = false;\n              var result11 = parse_comment();\n              reportMatchFailures = savedReportMatchFailuresVar0;\n              if (result11 === null) {\n                var result9 = '';\n              } else {\n                var result9 = null;\n                pos = savedPos3;\n              }\n              if (result9 !== null) {\n                if (input.length > pos) {\n                  var result10 = input.charAt(pos);\n                  pos++;\n                } else {\n                  var result10 = null;\n                  if (reportMatchFailures) {\n                    matchFailed('any character');\n                  }\n                }\n                if (result10 !== null) {\n                  var result5 = [result7, result8, result9, result10];\n                } else {\n                  var result5 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result5 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result5 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result5 = null;\n            pos = savedPos2;\n          }\n          var result6 = result5 !== null\n            ? (function(c) {return c})(result5[3])\n            : null;\n          if (result6 !== null) {\n            var result4 = result6;\n          } else {\n            var result4 = null;\n            pos = savedPos1;\n          }\n          if (result4 !== null) {\n            var result2 = [];\n            while (result4 !== null) {\n              result2.push(result4);\n              var savedPos1 = pos;\n              var savedPos2 = pos;\n              var savedPos5 = pos;\n              var savedReportMatchFailuresVar2 = reportMatchFailures;\n              reportMatchFailures = false;\n              var result13 = parse_tag();\n              reportMatchFailures = savedReportMatchFailuresVar2;\n              if (result13 === null) {\n                var result7 = '';\n              } else {\n                var result7 = null;\n                pos = savedPos5;\n              }\n              if (result7 !== null) {\n                var savedPos4 = pos;\n                var savedReportMatchFailuresVar1 = reportMatchFailures;\n                reportMatchFailures = false;\n                var result12 = parse_eol();\n                reportMatchFailures = savedReportMatchFailuresVar1;\n                if (result12 === null) {\n                  var result8 = '';\n                } else {\n                  var result8 = null;\n                  pos = savedPos4;\n                }\n                if (result8 !== null) {\n                  var savedPos3 = pos;\n                  var savedReportMatchFailuresVar0 = reportMatchFailures;\n                  reportMatchFailures = false;\n                  var result11 = parse_comment();\n                  reportMatchFailures = savedReportMatchFailuresVar0;\n                  if (result11 === null) {\n                    var result9 = '';\n                  } else {\n                    var result9 = null;\n                    pos = savedPos3;\n                  }\n                  if (result9 !== null) {\n                    if (input.length > pos) {\n                      var result10 = input.charAt(pos);\n                      pos++;\n                    } else {\n                      var result10 = null;\n                      if (reportMatchFailures) {\n                        matchFailed('any character');\n                      }\n                    }\n                    if (result10 !== null) {\n                      var result5 = [result7, result8, result9, result10];\n                    } else {\n                      var result5 = null;\n                      pos = savedPos2;\n                    }\n                  } else {\n                    var result5 = null;\n                    pos = savedPos2;\n                  }\n                } else {\n                  var result5 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result5 = null;\n                pos = savedPos2;\n              }\n              var result6 = result5 !== null\n                ? (function(c) {return c})(result5[3])\n                : null;\n              if (result6 !== null) {\n                var result4 = result6;\n              } else {\n                var result4 = null;\n                pos = savedPos1;\n              }\n            }\n          } else {\n            var result2 = null;\n          }\n          var result3 = result2 !== null\n            ? (function(b) { return [\"buffer\", b.join('')] })(result2)\n            : null;\n          if (result3 !== null) {\n            var result1 = result3;\n          } else {\n            var result1 = null;\n            pos = savedPos0;\n          }\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"buffer\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_literal() {\n        var cacheKey = 'literal@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        var savedPos4 = pos;\n        var savedReportMatchFailuresVar1 = reportMatchFailures;\n        reportMatchFailures = false;\n        var result12 = parse_tag();\n        reportMatchFailures = savedReportMatchFailuresVar1;\n        if (result12 === null) {\n          var result6 = '';\n        } else {\n          var result6 = null;\n          pos = savedPos4;\n        }\n        if (result6 !== null) {\n          var savedPos3 = pos;\n          var savedReportMatchFailuresVar0 = reportMatchFailures;\n          reportMatchFailures = false;\n          var result11 = parse_eol();\n          reportMatchFailures = savedReportMatchFailuresVar0;\n          if (result11 === null) {\n            var result7 = '';\n          } else {\n            var result7 = null;\n            pos = savedPos3;\n          }\n          if (result7 !== null) {\n            var result10 = parse_esc();\n            if (result10 !== null) {\n              var result8 = result10;\n            } else {\n              if (input.substr(pos).match(/^[^\"]/) !== null) {\n                var result9 = input.charAt(pos);\n                pos++;\n              } else {\n                var result9 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"[^\\\"]\");\n                }\n              }\n              if (result9 !== null) {\n                var result8 = result9;\n              } else {\n                var result8 = null;;\n              };\n            }\n            if (result8 !== null) {\n              var result4 = [result6, result7, result8];\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(c) {return c})(result4[2])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        if (result3 !== null) {\n          var result1 = [];\n          while (result3 !== null) {\n            result1.push(result3);\n            var savedPos1 = pos;\n            var savedPos2 = pos;\n            var savedPos4 = pos;\n            var savedReportMatchFailuresVar1 = reportMatchFailures;\n            reportMatchFailures = false;\n            var result12 = parse_tag();\n            reportMatchFailures = savedReportMatchFailuresVar1;\n            if (result12 === null) {\n              var result6 = '';\n            } else {\n              var result6 = null;\n              pos = savedPos4;\n            }\n            if (result6 !== null) {\n              var savedPos3 = pos;\n              var savedReportMatchFailuresVar0 = reportMatchFailures;\n              reportMatchFailures = false;\n              var result11 = parse_eol();\n              reportMatchFailures = savedReportMatchFailuresVar0;\n              if (result11 === null) {\n                var result7 = '';\n              } else {\n                var result7 = null;\n                pos = savedPos3;\n              }\n              if (result7 !== null) {\n                var result10 = parse_esc();\n                if (result10 !== null) {\n                  var result8 = result10;\n                } else {\n                  if (input.substr(pos).match(/^[^\"]/) !== null) {\n                    var result9 = input.charAt(pos);\n                    pos++;\n                  } else {\n                    var result9 = null;\n                    if (reportMatchFailures) {\n                      matchFailed(\"[^\\\"]\");\n                    }\n                  }\n                  if (result9 !== null) {\n                    var result8 = result9;\n                  } else {\n                    var result8 = null;;\n                  };\n                }\n                if (result8 !== null) {\n                  var result4 = [result6, result7, result8];\n                } else {\n                  var result4 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n            var result5 = result4 !== null\n              ? (function(c) {return c})(result4[2])\n              : null;\n            if (result5 !== null) {\n              var result3 = result5;\n            } else {\n              var result3 = null;\n              pos = savedPos1;\n            }\n          }\n        } else {\n          var result1 = null;\n        }\n        var result2 = result1 !== null\n          ? (function(b) { return b.join('') })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"literal\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_esc() {\n        var cacheKey = 'esc@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        if (input.substr(pos, 2) === \"\\\\\\\"\") {\n          var result1 = \"\\\\\\\"\";\n          pos += 2;\n        } else {\n          var result1 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"\\\\\\\\\\\\\\\"\\\"\");\n          }\n        }\n        var result2 = result1 !== null\n          ? (function() { return '\"' })()\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_comment() {\n        var cacheKey = 'comment@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        if (input.substr(pos, 2) === \"{!\") {\n          var result3 = \"{!\";\n          pos += 2;\n        } else {\n          var result3 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"{!\\\"\");\n          }\n        }\n        if (result3 !== null) {\n          var result4 = [];\n          var savedPos2 = pos;\n          var savedPos3 = pos;\n          var savedPos4 = pos;\n          var savedReportMatchFailuresVar0 = reportMatchFailures;\n          reportMatchFailures = false;\n          if (input.substr(pos, 2) === \"!}\") {\n            var result11 = \"!}\";\n            pos += 2;\n          } else {\n            var result11 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"!}\\\"\");\n            }\n          }\n          reportMatchFailures = savedReportMatchFailuresVar0;\n          if (result11 === null) {\n            var result9 = '';\n          } else {\n            var result9 = null;\n            pos = savedPos4;\n          }\n          if (result9 !== null) {\n            if (input.length > pos) {\n              var result10 = input.charAt(pos);\n              pos++;\n            } else {\n              var result10 = null;\n              if (reportMatchFailures) {\n                matchFailed('any character');\n              }\n            }\n            if (result10 !== null) {\n              var result7 = [result9, result10];\n            } else {\n              var result7 = null;\n              pos = savedPos3;\n            }\n          } else {\n            var result7 = null;\n            pos = savedPos3;\n          }\n          var result8 = result7 !== null\n            ? (function(c) {return c})(result7[1])\n            : null;\n          if (result8 !== null) {\n            var result6 = result8;\n          } else {\n            var result6 = null;\n            pos = savedPos2;\n          }\n          while (result6 !== null) {\n            result4.push(result6);\n            var savedPos2 = pos;\n            var savedPos3 = pos;\n            var savedPos4 = pos;\n            var savedReportMatchFailuresVar0 = reportMatchFailures;\n            reportMatchFailures = false;\n            if (input.substr(pos, 2) === \"!}\") {\n              var result11 = \"!}\";\n              pos += 2;\n            } else {\n              var result11 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"!}\\\"\");\n              }\n            }\n            reportMatchFailures = savedReportMatchFailuresVar0;\n            if (result11 === null) {\n              var result9 = '';\n            } else {\n              var result9 = null;\n              pos = savedPos4;\n            }\n            if (result9 !== null) {\n              if (input.length > pos) {\n                var result10 = input.charAt(pos);\n                pos++;\n              } else {\n                var result10 = null;\n                if (reportMatchFailures) {\n                  matchFailed('any character');\n                }\n              }\n              if (result10 !== null) {\n                var result7 = [result9, result10];\n              } else {\n                var result7 = null;\n                pos = savedPos3;\n              }\n            } else {\n              var result7 = null;\n              pos = savedPos3;\n            }\n            var result8 = result7 !== null\n              ? (function(c) {return c})(result7[1])\n              : null;\n            if (result8 !== null) {\n              var result6 = result8;\n            } else {\n              var result6 = null;\n              pos = savedPos2;\n            }\n          }\n          if (result4 !== null) {\n            if (input.substr(pos, 2) === \"!}\") {\n              var result5 = \"!}\";\n              pos += 2;\n            } else {\n              var result5 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"!}\\\"\");\n              }\n            }\n            if (result5 !== null) {\n              var result1 = [result3, result4, result5];\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(c) { return [\"comment\", c.join('')] })(result1[1])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"comment\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_tag() {\n        var cacheKey = 'tag@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos).match(/^[#?^><+%:@\\/~%]/) !== null) {\n            var result4 = input.charAt(pos);\n            pos++;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"[#?^><+%:@\\\\/~%]\");\n            }\n          }\n          if (result4 !== null) {\n            var savedPos1 = pos;\n            var savedPos3 = pos;\n            var savedReportMatchFailuresVar1 = reportMatchFailures;\n            reportMatchFailures = false;\n            var result12 = parse_rd();\n            reportMatchFailures = savedReportMatchFailuresVar1;\n            if (result12 === null) {\n              var result8 = '';\n            } else {\n              var result8 = null;\n              pos = savedPos3;\n            }\n            if (result8 !== null) {\n              var savedPos2 = pos;\n              var savedReportMatchFailuresVar0 = reportMatchFailures;\n              reportMatchFailures = false;\n              var result11 = parse_eol();\n              reportMatchFailures = savedReportMatchFailuresVar0;\n              if (result11 === null) {\n                var result9 = '';\n              } else {\n                var result9 = null;\n                pos = savedPos2;\n              }\n              if (result9 !== null) {\n                if (input.length > pos) {\n                  var result10 = input.charAt(pos);\n                  pos++;\n                } else {\n                  var result10 = null;\n                  if (reportMatchFailures) {\n                    matchFailed('any character');\n                  }\n                }\n                if (result10 !== null) {\n                  var result7 = [result8, result9, result10];\n                } else {\n                  var result7 = null;\n                  pos = savedPos1;\n                }\n              } else {\n                var result7 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result7 = null;\n              pos = savedPos1;\n            }\n            if (result7 !== null) {\n              var result5 = [];\n              while (result7 !== null) {\n                result5.push(result7);\n                var savedPos1 = pos;\n                var savedPos3 = pos;\n                var savedReportMatchFailuresVar1 = reportMatchFailures;\n                reportMatchFailures = false;\n                var result12 = parse_rd();\n                reportMatchFailures = savedReportMatchFailuresVar1;\n                if (result12 === null) {\n                  var result8 = '';\n                } else {\n                  var result8 = null;\n                  pos = savedPos3;\n                }\n                if (result8 !== null) {\n                  var savedPos2 = pos;\n                  var savedReportMatchFailuresVar0 = reportMatchFailures;\n                  reportMatchFailures = false;\n                  var result11 = parse_eol();\n                  reportMatchFailures = savedReportMatchFailuresVar0;\n                  if (result11 === null) {\n                    var result9 = '';\n                  } else {\n                    var result9 = null;\n                    pos = savedPos2;\n                  }\n                  if (result9 !== null) {\n                    if (input.length > pos) {\n                      var result10 = input.charAt(pos);\n                      pos++;\n                    } else {\n                      var result10 = null;\n                      if (reportMatchFailures) {\n                        matchFailed('any character');\n                      }\n                    }\n                    if (result10 !== null) {\n                      var result7 = [result8, result9, result10];\n                    } else {\n                      var result7 = null;\n                      pos = savedPos1;\n                    }\n                  } else {\n                    var result7 = null;\n                    pos = savedPos1;\n                  }\n                } else {\n                  var result7 = null;\n                  pos = savedPos1;\n                }\n              }\n            } else {\n              var result5 = null;\n            }\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result2 = [result3, result4, result5, result6];\n              } else {\n                var result2 = null;\n                pos = savedPos0;\n              }\n            } else {\n              var result2 = null;\n              pos = savedPos0;\n            }\n          } else {\n            var result2 = null;\n            pos = savedPos0;\n          }\n        } else {\n          var result2 = null;\n          pos = savedPos0;\n        }\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result1 = parse_reference();\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_ld() {\n        var cacheKey = 'ld@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        if (input.substr(pos, 1) === \"{\") {\n          var result0 = \"{\";\n          pos += 1;\n        } else {\n          var result0 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"{\\\"\");\n          }\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_rd() {\n        var cacheKey = 'rd@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        if (input.substr(pos, 1) === \"}\") {\n          var result0 = \"}\";\n          pos += 1;\n        } else {\n          var result0 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"}\\\"\");\n          }\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_eol() {\n        var cacheKey = 'eol@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        if (input.substr(pos, 1) === \"\\n\") {\n          var result5 = \"\\n\";\n          pos += 1;\n        } else {\n          var result5 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"\\\\n\\\"\");\n          }\n        }\n        if (result5 !== null) {\n          var result0 = result5;\n        } else {\n          if (input.substr(pos, 2) === \"\\r\\n\") {\n            var result4 = \"\\r\\n\";\n            pos += 2;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"\\\\r\\\\n\\\"\");\n            }\n          }\n          if (result4 !== null) {\n            var result0 = result4;\n          } else {\n            if (input.substr(pos, 1) === \"\\r\") {\n              var result3 = \"\\r\";\n              pos += 1;\n            } else {\n              var result3 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"\\\\r\\\"\");\n              }\n            }\n            if (result3 !== null) {\n              var result0 = result3;\n            } else {\n              if (input.substr(pos, 1) === \"\\u2028\") {\n                var result2 = \"\\u2028\";\n                pos += 1;\n              } else {\n                var result2 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"\\\"\\\\u2028\\\"\");\n                }\n              }\n              if (result2 !== null) {\n                var result0 = result2;\n              } else {\n                if (input.substr(pos, 1) === \"\\u2029\") {\n                  var result1 = \"\\u2029\";\n                  pos += 1;\n                } else {\n                  var result1 = null;\n                  if (reportMatchFailures) {\n                    matchFailed(\"\\\"\\\\u2029\\\"\");\n                  }\n                }\n                if (result1 !== null) {\n                  var result0 = result1;\n                } else {\n                  var result0 = null;;\n                };\n              };\n            };\n          };\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_ws() {\n        var cacheKey = 'ws@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        if (input.substr(pos).match(/^[\t\u000b\f \\xA0\\uFEFF]/) !== null) {\n          var result0 = input.charAt(pos);\n          pos++;\n        } else {\n          var result0 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"[\t\u000b\f \\\\xA0\\\\uFEFF]\");\n          }\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function buildErrorMessage() {\n        function buildExpected(failuresExpected) {\n          failuresExpected.sort();\n          \n          var lastFailure = null;\n          var failuresExpectedUnique = [];\n          for (var i = 0; i < failuresExpected.length; i++) {\n            if (failuresExpected[i] !== lastFailure) {\n              failuresExpectedUnique.push(failuresExpected[i]);\n              lastFailure = failuresExpected[i];\n            }\n          }\n          \n          switch (failuresExpectedUnique.length) {\n            case 0:\n              return 'end of input';\n            case 1:\n              return failuresExpectedUnique[0];\n            default:\n              return failuresExpectedUnique.slice(0, failuresExpectedUnique.length - 1).join(', ')\n                + ' or '\n                + failuresExpectedUnique[failuresExpectedUnique.length - 1];\n          }\n        }\n        \n        var expected = buildExpected(rightmostMatchFailuresExpected);\n        var actualPos = Math.max(pos, rightmostMatchFailuresPos);\n        var actual = actualPos < input.length\n          ? quote(input.charAt(actualPos))\n          : 'end of input';\n        \n        return 'Expected ' + expected + ' but ' + actual + ' found.';\n      }\n      \n      function computeErrorPosition() {\n        /*\n         * The first idea was to use |String.split| to break the input up to the\n         * error position along newlines and derive the line and column from\n         * there. However IE's |split| implementation is so broken that it was\n         * enough to prevent it.\n         */\n        \n        var line = 1;\n        var column = 1;\n        var seenCR = false;\n        \n        for (var i = 0; i <  rightmostMatchFailuresPos; i++) {\n          var ch = input.charAt(i);\n          if (ch === '\\n') {\n            if (!seenCR) { line++; }\n            column = 1;\n            seenCR = false;\n          } else if (ch === '\\r' | ch === '\\u2028' || ch === '\\u2029') {\n            line++;\n            column = 1;\n            seenCR = true;\n          } else {\n            column++;\n            seenCR = false;\n          }\n        }\n        \n        return { line: line, column: column };\n      }\n      \n      \n      \n    function wrap(node, ck) {\n      \n      node['text'] = input.substring(ck.split('@')[1], pos);\n      \n      return node;\n      \n    }\n      \n  \n      \n      var result = parseFunctions[startRule]();\n      \n      /*\n       * The parser is now in one of the following three states:\n       *\n       * 1. The parser successfully parsed the whole input.\n       *\n       *    - |result !== null|\n       *    - |pos === input.length|\n       *    - |rightmostMatchFailuresExpected| may or may not contain something\n       *\n       * 2. The parser successfully parsed only a part of the input.\n       *\n       *    - |result !== null|\n       *    - |pos < input.length|\n       *    - |rightmostMatchFailuresExpected| may or may not contain something\n       *\n       * 3. The parser did not successfully parse any part of the input.\n       *\n       *   - |result === null|\n       *   - |pos === 0|\n       *   - |rightmostMatchFailuresExpected| contains at least one failure\n       *\n       * All code following this comment (including called functions) must\n       * handle these states.\n       */\n      if (result === null || pos !== input.length) {\n        var errorPosition = computeErrorPosition();\n        throw new parser.SyntaxError(\n          buildErrorMessage(),\n          errorPosition.line,\n          errorPosition.column\n        );\n      }\n      \n      return result;\n    },\n    \n    /* Returns the parser source code. */\n    toSource: function() { return this._source; }\n  };\n  \n  /* Thrown when a parser encounters a syntax error. */\n  \n  result.SyntaxError = function(message, line, column) {\n    this.name = 'SyntaxError';\n    this.message = message;\n    this.line = line;\n    this.column = column;\n  };\n  \n  result.SyntaxError.prototype = Error.prototype;\n  \n  return result;\n})();\n\ndust.parse = parser.parse;\n\n})(typeof exports !== 'undefined' ? exports : window.dust);","blocks":{"total":707,"seen":476,"missing":231,"percentage":0.6732673267326733}},"hash":"ef4eb709b6cb3fd0743501fad2cc7d20"},"/Users/jdemorai/projects/dust-Linkedin/dustjs/lib/compiler.js":{"stats":{"percentage":0.9601226993865031,"lines":[{"lineno":10},{"lineno":52},{"lineno":113},{"lineno":172},{"lineno":194},{"lineno":202},{"lineno":226},{"lineno":237},{"lineno":238},{"lineno":239},{"lineno":242},{"lineno":323},{"lineno":326}],"missing":13,"seen":313,"total":326,"coverage":{"10":{"partial":true,"source":"    if(!err.line || !err.column) throw err;    ","missing":[{"startCol":33,"endCol":43}]},"52":{"partial":false,"source":"    if (!context) context = 'h';","missing":[{"startCol":18,"endCol":32}]},"113":{"partial":true,"source":"    + (name ? \"\\\"\" + name + \"\\\"\" : \"null\") + \",\"","missing":[{"startCol":35,"endCol":41}]},"172":{"partial":false,"source":"    return \".write(\" + escape(node[1] + node[2]) + \")\";","missing":[{"startCol":4,"endCol":55},{"startCol":11,"endCol":48},{"startCol":23,"endCol":48},{"startCol":30,"endCol":47}]},"194":{"partial":true,"source":"    for (var i=1, len=bodies.length; i<len; i++) {","missing":[{"startCol":44,"endCol":47}]},"202":{"partial":false,"source":"    return '';","missing":[{"startCol":4,"endCol":14}]},"226":{"partial":false,"source":"    if (!dust.pragmas[name]) return '';","missing":[{"startCol":29,"endCol":39}]},"237":{"partial":true,"source":"    for (var i=1, len=rawParams.length; i<len; i++) {","missing":[{"startCol":47,"endCol":50}]},"238":{"partial":false,"source":"      var p = rawParams[i];","missing":[{"startCol":6,"endCol":27}]},"239":{"partial":false,"source":"      params[p[1][1]] = p[2][1];","missing":[{"startCol":6,"endCol":32}]},"242":{"partial":true,"source":"    var ctx = node[2][1] ? node[2][1].text : null;","missing":[{"startCol":45,"endCol":49}]},"323":{"partial":false,"source":"  ? function(str) { return \"\\\"\" + dust.escapeJs(str) + \"\\\"\" }","missing":[{"startCol":4,"endCol":61},{"startCol":20,"endCol":60},{"startCol":27,"endCol":52},{"startCol":34,"endCol":52}]},"326":{"partial":true,"source":"})(typeof exports !== 'undefined' ? exports : window.dust);","missing":[{"startCol":46,"endCol":57}]}},"source":"(function(dust) {\n\ndust.compile = function(source, name) {\n  try {\n    var ast = filterAST(dust.parse(source));\n    return compile(ast, name);\n  }\n  catch(err)\n  {\n    if(!err.line || !err.column) throw err;    \n    throw new SyntaxError(err.message + \" At line : \" + err.line + \", column : \" + err.column);\n  }\n};\n\nfunction filterAST(ast) {\n  var context = {};\n  return dust.filterNode(context, ast);\n}\n\ndust.filterNode = function(context, node) {\n  return dust.optimizers[node[0]](context, node);\n}\n\ndust.optimizers = {\n  body:      compactBuffers,\n  buffer:    noop,\n  special:   convertSpecial,\n  format:    nullify,        // TODO: convert format\n  reference: visit,\n  \"#\":       visit,\n  \"?\":       visit,\n  \"^\":       visit,\n  \"<\":       visit,\n  \"+\":       visit,\n  \"@\":       visit,\n  \"%\":       visit,\n  partial:   visit,\n  context:   visit,\n  params:    visit,\n  bodies:    visit,\n  param:     visit,\n  filters:   noop,\n  key:       noop,\n  path:      noop,\n  literal:   noop,\n  comment:   nullify\n}\n\ndust.pragmas = {\n  esc: function(compiler, context, bodies, params) {\n    var old = compiler.auto;\n    if (!context) context = 'h';\n    compiler.auto = (context === 's') ? '' : context;\n    var out = compileParts(compiler, bodies.block);\n    compiler.auto = old;\n    return out;\n  }\n}\n\nfunction visit(context, node) {\n  var out = [node[0]];\n  for (var i=1, len=node.length; i<len; i++) {\n    var res = dust.filterNode(context, node[i]);\n    if (res) out.push(res);\n  }\n  return out;\n}\n\n// Compacts consecutive buffer nodes into a single node\nfunction compactBuffers(context, node) {\n  var out = [node[0]], memo;\n  for (var i=1, len=node.length; i<len; i++) {\n    var res = dust.filterNode(context, node[i]);\n    if (res) {\n      if (res[0] === 'buffer') {\n        if (memo) {\n          memo[1] += res[1];\n        } else {\n          memo = res;\n          out.push(res);\n        }\n      } else {\n        memo = null;\n        out.push(res);\n      }\n    }\n  }\n  return out;\n}\n\nvar specialChars = {\n  \"s\": \" \",\n  \"n\": \"\\n\",\n  \"r\": \"\\r\",\n  \"lb\": \"{\",\n  \"rb\": \"}\"\n};\n\nfunction convertSpecial(context, node) { return ['buffer', specialChars[node[1]]] }\nfunction noop(context, node) { return node }\nfunction nullify(){}\n\nfunction compile(ast, name) {\n  var context = {\n    name: name,\n    bodies: [],\n    blocks: {},\n    index: 0,\n    auto: \"h\"\n  }\n\n  return \"(function(){dust.register(\"\n    + (name ? \"\\\"\" + name + \"\\\"\" : \"null\") + \",\"\n    + dust.compileNode(context, ast)\n    + \");\"\n    + compileBlocks(context)\n    + compileBodies(context)\n    + \"return body_0;\"\n    + \"})();\";\n}\n\nfunction compileBlocks(context) {\n  var out = [],\n      blocks = context.blocks;\n\n  for (var name in blocks) {\n    out.push(name + \":\" + blocks[name]);\n  }\n  if (out.length) {\n    context.blocks = \"ctx=ctx.shiftBlocks(blocks);\";\n    return \"var blocks={\" + out.join(',') + \"};\";\n  }\n  return context.blocks = \"\";\n}\n\nfunction compileBodies(context) {\n  var out = [],\n      bodies = context.bodies,\n      blx = context.blocks;\n\n  for (var i=0, len=bodies.length; i<len; i++) {\n    out[i] = \"function body_\" + i + \"(chk,ctx){\"\n      + blx + \"return chk\" + bodies[i] + \";}\";\n  }\n  return out.join('');\n}\n\nfunction compileParts(context, body) {\n  var parts = '';\n  for (var i=1, len=body.length; i<len; i++) {\n    parts += dust.compileNode(context, body[i]);\n  }\n  return parts;\n}\n\ndust.compileNode = function(context, node) {\n  return dust.nodes[node[0]](context, node);\n}\n\ndust.nodes = {\n  body: function(context, node) {\n    var id = context.index++, name = \"body_\" + id;\n    context.bodies[id] = compileParts(context, node);\n    return name;\n  },\n\n  buffer: function(context, node) {\n    return \".write(\" + escape(node[1]) + \")\";\n  },\n\n  format: function(context, node) {\n    return \".write(\" + escape(node[1] + node[2]) + \")\";\n  },\n\n  reference: function(context, node) {\n    return \".reference(\" + dust.compileNode(context, node[1])\n      + \",ctx,\" + dust.compileNode(context, node[2]) + \")\";\n  },\n\n  \"#\": function(context, node) {\n    return compileSection(context, node, \"section\");\n  },\n\n  \"?\": function(context, node) {\n    return compileSection(context, node, \"exists\");\n  },\n\n  \"^\": function(context, node) {\n    return compileSection(context, node, \"notexists\");\n  },\n\n  \"<\": function(context, node) {\n    var bodies = node[4];\n    for (var i=1, len=bodies.length; i<len; i++) {\n      var param = bodies[i],\n          type = param[1][1];\n      if (type === \"block\") {\n        context.blocks[node[1].text] = dust.compileNode(context, param[2]);\n        return '';\n      }\n    }\n    return '';\n  },\n\n  \"+\": function(context, node) {\n    return \".block(ctx.getBlock(\"\n      + escape(node[1].text)\n      + \"),\" + dust.compileNode(context, node[2]) + \",\"\n      + dust.compileNode(context, node[4]) + \",\"\n      + dust.compileNode(context, node[3])\n      + \")\";\n  },\n\n  \"@\": function(context, node) {\n    return \".helper(\"\n      + escape(node[1].text)\n      + \",\" + dust.compileNode(context, node[2]) + \",\"\n      + dust.compileNode(context, node[4]) + \",\"\n      + dust.compileNode(context, node[3])\n      + \")\";\n  },\n\n  \"%\": function(context, node) {\n    // TODO: Move these hacks into pragma precompiler\n    var name = node[1][1];\n    if (!dust.pragmas[name]) return '';\n\n    var rawBodies = node[4];\n    var bodies = {};\n    for (var i=1, len=rawBodies.length; i<len; i++) {\n      var b = rawBodies[i];\n      bodies[b[1][1]] = b[2];\n    }\n\n    var rawParams = node[3];\n    var params = {};\n    for (var i=1, len=rawParams.length; i<len; i++) {\n      var p = rawParams[i];\n      params[p[1][1]] = p[2][1];\n    }\n\n    var ctx = node[2][1] ? node[2][1].text : null;\n\n    return dust.pragmas[name](context, ctx, bodies, params);\n  },\n\n  partial: function(context, node) {\n    return \".partial(\"\n      + dust.compileNode(context, node[1])\n      + \",\" + dust.compileNode(context, node[2]) + \")\";\n  },\n\n  context: function(context, node) {\n    if (node[1]) {\n      return \"ctx.rebase(\" + dust.compileNode(context, node[1]) + \")\";\n    }\n    return \"ctx\";\n  },\n\n  params: function(context, node) {\n    var out = [];\n    for (var i=1, len=node.length; i<len; i++) {\n      out.push(dust.compileNode(context, node[i]));\n    }\n    if (out.length) {\n      return \"{\" + out.join(',') + \"}\";\n    }\n    return \"null\";\n  },\n\n  bodies: function(context, node) {\n    var out = [];\n    for (var i=1, len=node.length; i<len; i++) {\n      out.push(dust.compileNode(context, node[i]));\n    }\n    return \"{\" + out.join(',') + \"}\";\n  },\n\n  param: function(context, node) {\n    return dust.compileNode(context, node[1]) + \":\" + dust.compileNode(context, node[2]);\n  },\n\n  filters: function(context, node) {\n    var list = [];\n    for (var i=1, len=node.length; i<len; i++) {\n      var filter = node[i];\n      list.push(\"\\\"\" + filter + \"\\\"\");\n    }\n    return \"\\\"\" + context.auto + \"\\\"\"\n      + (list.length ? \",[\" + list.join(',') + \"]\" : '');\n  },\n\n  key: function(context, node) {\n    return \"ctx.get(\\\"\" + node[1] + \"\\\")\";\n  },\n\n  path: function(context, node) {\n    var current = node[1],\n        keys = node[2],\n        list = [];\n\n    for (var i=0,len=keys.length; i<len; i++) {\n      list.push(\"\\\"\" + keys[i] + \"\\\"\");\n    }\n    return \"ctx.getPath(\" + current + \",[\" + list.join(',') + \"])\";\n  },\n\n  literal: function(context, node) {\n    return escape(node[1]);\n  }\n}\n\nfunction compileSection(context, node, cmd) {\n  return \".\" + cmd + \"(\"\n    + dust.compileNode(context, node[1])\n    + \",\" + dust.compileNode(context, node[2]) + \",\"\n    + dust.compileNode(context, node[4]) + \",\"\n    + dust.compileNode(context, node[3])\n    + \")\";\n}\n\nvar escape = (typeof JSON === \"undefined\")\n  ? function(str) { return \"\\\"\" + dust.escapeJs(str) + \"\\\"\" }\n  : JSON.stringify;\n\n})(typeof exports !== 'undefined' ? exports : window.dust);","blocks":{"total":64,"seen":58,"missing":6,"percentage":0.90625}},"hash":"4fcea0227f20942f5daaa042aea22bb2"},"/Users/jdemorai/projects/dust-Linkedin/dustjs/test/jasmine-test/spec/examples.js":{"stats":{"percentage":0.97,"lines":[{"lineno":13},{"lineno":14},{"lineno":16},{"lineno":19},{"lineno":20},{"lineno":21},{"lineno":22},{"lineno":193},{"lineno":220},{"lineno":260},{"lineno":262},{"lineno":399}],"missing":12,"seen":388,"total":400,"coverage":{"13":{"partial":false,"source":"                var d = 1;","missing":[{"startCol":16,"endCol":26}]},"14":{"partial":false,"source":"                return {","missing":[{}]},"15":{"partial":false,"source":"                  stream: function() {","missing":[{}]},"16":{"partial":false,"source":"                    return \"asynchronous templates for the browser and node.js\".split('');","missing":[{"startCol":20,"endCol":90},{"startCol":27,"endCol":89},{}]},"17":{"partial":false,"source":"                  },","missing":[{}]},"18":{"partial":false,"source":"                  delay: function(chunk, context, bodies) {","missing":[{}]},"19":{"partial":false,"source":"                    return chunk.map(function(chunk) {","missing":[{}]},"20":{"partial":false,"source":"                      setTimeout(function() {","missing":[{}]},"21":{"partial":false,"source":"                        chunk.render(bodies.block, context).end();","missing":[{},{"startCol":24,"endCol":65},{"startCol":36,"endCol":59}]},"22":{"partial":false,"source":"                      }, d++ * 15);","missing":[{},{"startCol":25,"endCol":33}]},"23":{"partial":false,"source":"                    });","missing":[{}]},"24":{"partial":false,"source":"                  }","missing":[{}]},"25":{"partial":false,"source":"                }","missing":[{}]},"26":{"partial":false,"source":"              }),","missing":[{}]},"193":{"partial":false,"source":"                      chunk.end(\"Async\");","missing":[{"startCol":22,"endCol":40}]},"220":{"partial":false,"source":"                      chunk.render(bodies.block, context).end();","missing":[{"startCol":22,"endCol":63},{"startCol":34,"endCol":57}]},"260":{"partial":false,"source":"                    return chunk.render(bodies['else'], context);","missing":[{"startCol":20,"endCol":65},{"startCol":27,"endCol":64}]},"262":{"partial":false,"source":"                  return chunk;","missing":[{"startCol":18,"endCol":31}]},"399":{"partial":false,"source":"    window.dustExamples = dustExamples; // We're on the browser","missing":[{"startCol":4,"endCol":39}]}},"source":"var dustExamples = [\n  {\n    name: \"error\",\n    source: \"RRR {##}\",\n    context: { name: \"Mick\", count: 30 },\n    error: 'Expected buffer, comment, partial, reference, section or special but \"{\" found. At line : 1, column : 5',\n    message: \"should test that the error message shows line and column.\"\n  },\n  {\n    name:     \"intro\",\n    source:   \"{#stream}{#delay}{.}{/delay}{/stream}\",\n    context:  (function(){\n                var d = 1;\n                return {\n                  stream: function() {\n                    return \"asynchronous templates for the browser and node.js\".split('');\n                  },\n                  delay: function(chunk, context, bodies) {\n                    return chunk.map(function(chunk) {\n                      setTimeout(function() {\n                        chunk.render(bodies.block, context).end();\n                      }, d++ * 15);\n                    });\n                  }\n                }\n              }),\n    expected: '',\n    message: \"should test the stream tag\"\n  },\n  {\n    name:     \"plain\",\n    source:   \"Hello World!\",\n    context:  {},\n    expected: \"Hello World!\",\n    message: \"should test basic\"\n  },\n  {\n    name:     \"replace\",\n    source:   \"Hello {name}! You have {count} new messages.\",\n    context:  { name: \"Mick\", count: 30 },\n    expected: \"Hello Mick! You have 30 new messages.\",\n    message: \"should test a basic replace\"\n  },\n  {\n    name:     \"zero\",\n    source:   \"{#zero}{.}{/zero}\",\n    context:  { zero: 0 },\n    expected: \"0\",\n    message: \"should test one basic section\"\n  },\n  {\n    name:     \"array\",\n    source:   \"{#names}{title} {name}{~n}{/names}\",\n    context:  { title: \"Sir\", names: [ { name: \"Moe\" }, { name: \"Larry\" }, { name: \"Curly\" } ] },\n    expected: \"Sir Moe\\nSir Larry\\nSir Curly\\n\",\n    message: \"should test an array\"\n  },\n  {\n     name:     \"array\",\n     source:   \"{#names}({$idx}).{title} {name}{~n}{/names}\",\n     context:  { title: \"Sir\", names: [ { name: \"Moe\" }, { name: \"Larry\" }, { name: \"Curly\" } ] },\n     expected: \"(0).Sir Moe\\n(1).Sir Larry\\n(2).Sir Curly\\n\",\n     message: \"should test an array\"\n   },\n  {\n      name:     \"array\",\n      source:   \"{#names}Size=({$len}).{title} {name}{~n}{/names}\",\n      context:  { title: \"Sir\", names: [ { name: \"Moe\" }, { name: \"Larry\" }, { name: \"Curly\" } ] },\n      expected: \"Size=(3).Sir Moe\\nSize=(3).Sir Larry\\nSize=(3).Sir Curly\\n\",\n      message: \"should test an array\"\n  },\n  {\n    name:     \"empty_array\",\n    source:   \"{#names}{title} {name}{~n}{/names}\",\n    context:  { title: \"Sir\", names: [] },\n    expected: \"\",\n    message: \"should test an empty array\"\n  },\n  {\n    name:     \"implicit\",\n    source:   \"{#names}{.}{~n}{/names}\",\n    context:  { names: [\"Moe\", \"Larry\", \"Curly\"] },\n    expected: \"Moe\\nLarry\\nCurly\\n\",\n    message: \"should test an implicit array\"\n  },\n  {\n    name:     \"object\",\n    source:   \"{#person}{root}: {name}, {age}{/person}\",\n    context:  { root: \"Subject\", person: { name: \"Larry\", age: 45 } },\n    expected: \"Subject: Larry, 45\",\n    message: \"should test an object\"\n  },\n  {\n    name:     \"rename_key\",\n    source:   \"{#person foo=root}{foo}: {name}, {age}{/person}\",\n    context:  { root: \"Subject\", person: { name: \"Larry\", age: 45 } },\n    expected: \"Subject: Larry, 45\",\n    message: \"should test renaming a key\"\n  },\n  {\n    name:     \"force_current\",\n    source:   \"{#person}{.root}: {name}, {age}{/person}\",\n    context:  { root: \"Subject\", person: { name: \"Larry\", age: 45 } },\n    expected: \": Larry, 45\",\n    message: \"should test force a key\"\n  },\n  {\n    name:     \"path\",\n    source:   \"{foo.bar}\",\n    context:  { foo: {bar: \"Hello!\"} },\n    expected: \"Hello!\",\n    message: \"should test an object path\"\n  },\n  {\n    name:     \"escaped\",\n    source:   \"{safe|s}{~n}{unsafe}\",\n    context:  { safe: \"<script>alert('Hello!')</script>\", unsafe: \"<script>alert('Goodbye!')</script>\" },\n    expected: \"<script>alert('Hello!')</script>\\n&lt;script&gt;alert('Goodbye!')&lt;/script&gt;\",\n    message: \"should test escaped characters\"\n  },\n  {\n    name:     \"escape_pragma\",\n    source:   \"{%esc:s}\\n  {unsafe}{~n}\\n  {%esc:h}\\n    {unsafe}\\n  {/esc}\\n{/esc}\",\n    context:  { unsafe: \"<script>alert('Goodbye!')</script>\" },\n    expected: \"<script>alert('Goodbye!')</script>\\n&lt;script&gt;alert('Goodbye!')&lt;/script&gt;\",\n    message: \"should test escape_pragma\"\n  },\n  {\n    name:     \"else_block\",\n    source:   \"{#foo}\\n\"         +\n              \"  foo,{~s}\\n\"     +\n              \"{:else}\\n\"        +\n              \"  not foo,{~s}\\n\" +\n              \"{/foo}\\n\"         +\n              \"{#bar}\\n\"         +\n              \"  bar!\\n\"         +\n              \"{:else}\\n\"        +\n              \"  not bar!\\n\"     +\n              \"{/bar}\",\n    context:  { foo: true, bar: false },\n    expected: \"foo, not bar!\",\n    message:\"should test the else block\"\n  },\n  {\n    name:     \"conditional\",\n    source:   \"{?tags}\\n\"                     +\n              \"  <ul>{~n}\\n\"                  +\n              \"    {#tags}\\n\"                 +\n              \"      {~s} <li>{.}</li>{~n}\\n\" +\n              \"    {/tags}\\n\"                 +\n              \"  </ul>\\n\"                     +\n              \"{:else}\\n\"                     +\n              \"  No Tags!\\n\"                  +\n              \"{/tags}\\n\"                     +\n              \"{~n}\\n\"                        +\n              \"{^likes}\\n\"                    +\n              \"  No Likes!\\n\"                 +\n              \"{:else}\\n\"                     +\n              \"  <ul>{~n}\\n\"                  +\n              \"    {#likes}\\n\"                +\n              \"      {~s} <li>{.}</li>{~n}\\n\" +\n              \"    {/likes}\\n\"                +\n              \"  </ul>\\n\"                     +\n              \"{/likes}\",\n    context:  { tags: [], likes: [\"moe\", \"larry\", \"curly\", \"shemp\"] },\n    expected: \"No Tags!\\n\"                    +\n              \"<ul>\\n\"                        +\n              \"  <li>moe</li>\\n\"              +\n              \"  <li>larry</li>\\n\"            +\n              \"  <li>curly</li>\\n\"            +\n              \"  <li>shemp</li>\\n\"            +\n              \"</ul>\",\n    message: \"should test conditional tags\"\n  },\n  {\n    name:     \"sync_key\",\n    source:   \"Hello {type} World!\",\n    context:  {\n                type: function(chunk) {\n                  return \"Sync\";\n                }\n              },\n    expected: \"Hello Sync World!\",\n    message: \"should test sync key\"\n  },\n  {\n    name:     \"async_key\",\n    source:   \"Hello {type} World!\",\n    context:  {\n                type: function(chunk) {\n                  return chunk.map(function(chunk) {\n                    dust.nextTick(function() {\n                      chunk.end(\"Async\");\n                    });\n                  });\n                }\n              },\n    expected: \"Hello Async World!\",\n    message: \"should test async key\"\n  },\n  {\n    name:     \"sync_chunk\",\n    source:   \"Hello {type} World!\",\n    context:  {\n                type: function(chunk) {\n                  return chunk.write(\"Chunky\");\n                }\n              },\n    expected: \"Hello Chunky World!\",\n    message: \"should test sync chunk\"\n  },\n  {\n    name:     \"async_iterator\",\n    source:   \"{#numbers}{#delay}{.}{/delay}{@sep}, {/sep}{/numbers}\",\n    context:  {\n                numbers: [3, 2, 1],\n                delay: function(chunk, context, bodies) {\n                  return chunk.map(function(chunk) {\n                    setTimeout(function() {\n                      chunk.render(bodies.block, context).end();\n                    }, Math.ceil(Math.random()*10));\n                  });\n                }\n              },\n    expected: \"3, 2, 1\",\n    message: \"should test async iterator\"\n  },\n  {\n    name:     \"filter\",\n    source:   \"{#filter}foo {bar}{/filter}\",\n    context:  {\n                filter: function(chunk, context, bodies) {\n                  return chunk.tap(function(data) {\n                    return data.toUpperCase();\n                  }).render(bodies.block, context).untap();\n                },\n\n                bar: \"bar\"\n              },\n    expected: \"FOO BAR\",\n    message: \"should test the filter tag\"\n  },\n  {\n    name:     \"context\",\n    source:   \"{#list:projects}{name}{:else}No Projects!{/list}\",\n    context:  {\n                list: function(chunk, context, bodies) {\n                  var items = context.current(),\n                      len   = items.length;\n\n                  if (len) {\n                    chunk.write(\"<ul>\\n\");\n                    for (var i=0; i<len; i++) {\n                      chunk = chunk.write(\"<li>\")\n                        .render(bodies.block, context.push(items[i]))\n                        .write(\"</li>\\n\");\n                    }\n                    return chunk.write(\"</ul>\");\n                  } else if (bodies['else']) {\n                    return chunk.render(bodies['else'], context);\n                  }\n                  return chunk;\n                },\n\n                projects: [\n                  {name: \"Mayhem\"},\n                  {name: \"Flash\"},\n                  {name: \"Thunder\"}\n                ]\n              },\n    expected: \"<ul>\\n\"             +\n              \"<li>Mayhem</li>\\n\"  +\n              \"<li>Flash</li>\\n\"   +\n              \"<li>Thunder</li>\\n\" +\n              \"</ul>\",\n    message: \"should test the context\"\n  },\n  {\n    name:     \"params\",\n    source:   \"{#helper foo=\\\"bar\\\"/}\",\n    context:  {\n                helper: function(chunk, context, bodies, params) {\n                  return chunk.write(params.foo);\n                }\n              },\n    expected: \"bar\",\n    message: \"should test inner params\"\n  },\n  {\n    name:     \"partials\",\n    source:   '{>replace/} {>\"plain\"/} {>\"{ref}\"/}',\n    context:  { name: \"Jim\", count: 42, ref: \"plain\" },\n    expected: \"Hello Jim! You have 42 new messages. Hello World! Hello World!\",\n    message: \"should test partials\"\n  },\n  {\n    name:     \"partial_context\",\n    source:   \"{>replace:.profile/}\",\n    context:  { profile: { name: \"Mick\", count: 30 } },\n    expected: \"Hello Mick! You have 30 new messages.\",\n    message: \"should test partial context\"\n  },\n  {\n    name:     \"base_template\",\n    source:   \"Start{~n}\\n\"       +\n              \"{+title}\\n\"        +\n              \"  Base Title\\n\"    +\n              \"{/title}\\n\"        +\n              \"{~n}\\n\"            +\n              \"{+main}\\n\"         +\n              \"  Base Content\\n\"  +\n              \"{/main}\\n\"         +\n              \"{~n}\\n\"            +\n              \"End\",\n    context:  {},\n    expected: \"Start\\nBase Title\\nBase Content\\nEnd\",\n    message: \"should test base template\"\n  },\n  {\n    name:     \"child_template\",\n    source:   \"{^xhr}\\n\"              +\n              \"  {>base_template/}\\n\" +\n              \"{:else}\\n\"             +\n              \"  {+main/}\\n\"          +\n              \"{/xhr}\\n\"              +\n              \"{<title}\\n\"            +\n              \"  Child Title\\n\"       +\n              \"{/title}\\n\"            +\n              \"{<main}\\n\"             +\n              \"  Child Content\\n\"     +\n              \"{/main}\\n\",\n    context:  {xhr: false},\n    expected: \"Start\\nChild Title\\nChild Content\\nEnd\",\n    message: \"should test child template\"\n  },\n  {\n    name:     \"recursion\",\n    source:   \"{name}{~n}{#kids}{>recursion:./}{/kids}\",\n    context:  {\n                name: '1',\n                kids: [\n                  {\n                    name: '1.1',\n                    kids: [\n                      {name: '1.1.1'}\n                    ]\n                  }\n                ]\n              },\n    expected: \"1\\n1.1\\n1.1.1\\n\",\n    message: \"should test recursion\"\n  },\n  {\n    name:     \"comments\",\n    source:   \"{!\\n\"                      +\n              \"  Multiline\\n\"             +\n              \"  {#foo}{bar}{/foo}\\n\"     +\n              \"!}\\n\"                      +\n              \"{!before!}Hello{!after!}\",\n    context:  {},\n    expected: \"Hello\",\n    message: \"should test comments\"\n  },\n  {\n    name:     \"@if helper\",\n    source:   '{@if cond=\"{x}<{y}\"}<div> X < Y </div>{/if}',  \n    context:  { x: 2, y: 3 },\n    expected: \"<div> X < Y </div>\",\n    message: \"should test the simplest case of @if helper (if without else)\"\n  },\n  {\n    name:     \"@if helper\",\n    source:   '{@if cond=\" \\'{x}\\'.length && \\'{y}\\'.length \"}<div> X and Y exists </div>{:else}<div> X and Y does not exists </div>{/if}',  \n    context:  {},\n    expected: \"<div> X and Y does not exists </div>\",\n    message: \"should test the simplest case of @if helper with else using and\"\n  },\n  {\n    name:     \"@if helper\",\n    source:   '{@if cond=\" \\'{x}\\'.length || \\'{y}\\'.length \"}<div> X or Y exists </div>{:else}<div> X or Y does not exists </div>{/if}',  \n    context:  { x: 1},\n    expected: \"<div> X or Y exists </div>\",\n    message: \"should test the simplest case of @if helper with else using or\"\n  },\n  {\n    name:     \"@if helper\",\n    source:   '{@if cond=\"( \\'{x}\\'.length ) && ({x}<3)\"}<div> X exists and is 1 </div>{:else}<div> x is not there </div>{/if}',  \n    context:  { x : 1},\n    expected: \"<div> X exists and is 1 </div>\",\n    message: \"should test the simplest case of @if helper with else using exists /and\"\n  },\n  \n  \n];\n\nif (typeof module !== \"undefined\" && typeof require !== \"undefined\") {\n    module.exports = dustExamples; // We're on node.js\n} else {\n    window.dustExamples = dustExamples; // We're on the browser\n}","blocks":{"total":22,"seen":13,"missing":9,"percentage":0.5909090909090909}},"hash":"2b29e756be9cf46e0637f1ae4053eab3"},"/Users/jdemorai/projects/dust-Linkedin/dustjs/test/jasmine-test/spec/renderTestSpec.js":{"stats":{"percentage":1,"lines":[],"missing":0,"seen":21,"total":21,"coverage":{},"source":"describe (\"Test the basic functionality of dust\", function() {\n  for (var index = 0; index < dustExamples.length; index++) {\n    var test = dustExamples[index];\n    it (test.message, render(test));\n  };\n});\n\nfunction render(test) { \n  return function() {\n    try {\n      dust.loadSource(dust.compile(test.source, test.name));\n      dust.render(test.name, test.context, function(err, output) {\n        expect(err).toBeNull();\n        expect(test.expected).toEqual(output);\n      });\n    }\n    catch (error) {\n      expect(test.error || {} ).toEqual(error.message);\n    }\n  };\n}","blocks":{"total":7,"seen":7,"missing":0,"percentage":1}},"hash":"8ac9e1c1490a198a557164190df94999"}}}